/**
 * generated by http://RDFReactor.semweb4j.org ($Id: CodeGenerator.java 1765 2010-02-11 09:51:13Z max.at.xam.de $) on 21.12.12 17:00
 */
package com.xmlns.foaf;

import org.ontoware.aifbcommons.collection.ClosableIterator;
import org.ontoware.rdf2go.exception.ModelRuntimeException;
import org.ontoware.rdf2go.model.Model;
import org.ontoware.rdf2go.model.node.BlankNode;
import org.ontoware.rdf2go.model.node.URI;
import org.ontoware.rdf2go.model.node.impl.URIImpl;
import org.ontoware.rdfreactor.runtime.Base;
import org.ontoware.rdfreactor.runtime.ReactorResult;


/**
 * This class manages access to these properties:
 * <ul>
 *   <li> AIMchatID </li>
 *   <li> Account </li>
 *   <li> Age </li>
 *   <li> Birthday </li>
 *   <li> Gender </li>
 *   <li> HoldsAccount </li>
 *   <li> ICQchatID </li>
 *   <li> Interest </li>
 *   <li> JabberID </li>
 *   <li> MSNchatID </li>
 *   <li> Made </li>
 *   <li> Openid </li>
 *   <li> Personalmailbox </li>
 *   <li> Sha1sumofapersonalmailboxURIname </li>
 *   <li> SkypeID </li>
 *   <li> Status </li>
 *   <li> Tipjar </li>
 *   <li> Topicinterest </li>
 *   <li> Weblog </li>
 *   <li> YahoochatID </li>
 * </ul>
 *
 * This class was generated by <a href="http://RDFReactor.semweb4j.org">RDFReactor</a> on 21.12.12 17:00
 */
public class Agent extends FOAFThing {

    /**
     * 
     */
    private static final long serialVersionUID                 = 2207976873398897032L;

    /** http://xmlns.com/foaf/0.1/Agent */
	public static final URI RDFS_CLASS = new URIImpl("http://xmlns.com/foaf/0.1/Agent", false);

    /** http://xmlns.com/foaf/0.1/aimChatID */
	public static final URI AIMCHATID = new URIImpl("http://xmlns.com/foaf/0.1/aimChatID",false);

    /** http://xmlns.com/foaf/0.1/account */
	public static final URI ACCOUNT = new URIImpl("http://xmlns.com/foaf/0.1/account",false);

    /** http://xmlns.com/foaf/0.1/age */
	public static final URI AGE = new URIImpl("http://xmlns.com/foaf/0.1/age",false);

    /** http://xmlns.com/foaf/0.1/birthday */
	public static final URI BIRTHDAY = new URIImpl("http://xmlns.com/foaf/0.1/birthday",false);

    /** http://xmlns.com/foaf/0.1/gender */
	public static final URI GENDER = new URIImpl("http://xmlns.com/foaf/0.1/gender",false);

    /** http://xmlns.com/foaf/0.1/holdsAccount */
	public static final URI HOLDSACCOUNT = new URIImpl("http://xmlns.com/foaf/0.1/holdsAccount",false);

    /** http://xmlns.com/foaf/0.1/icqChatID */
	public static final URI ICQCHATID = new URIImpl("http://xmlns.com/foaf/0.1/icqChatID",false);

    /** http://xmlns.com/foaf/0.1/interest */
	public static final URI INTEREST = new URIImpl("http://xmlns.com/foaf/0.1/interest",false);

    /** http://xmlns.com/foaf/0.1/jabberID */
	public static final URI JABBERID = new URIImpl("http://xmlns.com/foaf/0.1/jabberID",false);

    /** http://xmlns.com/foaf/0.1/msnChatID */
	public static final URI MSNCHATID = new URIImpl("http://xmlns.com/foaf/0.1/msnChatID",false);

    /** http://xmlns.com/foaf/0.1/made */
	public static final URI MADE = new URIImpl("http://xmlns.com/foaf/0.1/made",false);

    /** http://xmlns.com/foaf/0.1/openid */
	public static final URI OPENID = new URIImpl("http://xmlns.com/foaf/0.1/openid",false);

    /** http://xmlns.com/foaf/0.1/mbox */
	public static final URI PERSONALMAILBOX = new URIImpl("http://xmlns.com/foaf/0.1/mbox",false);

    /** http://xmlns.com/foaf/0.1/mbox_sha1sum */
	public static final URI SHA1SUMOFAPERSONALMAILBOXURINAME = new URIImpl("http://xmlns.com/foaf/0.1/mbox_sha1sum",false);

    /** http://xmlns.com/foaf/0.1/skypeID */
	public static final URI SKYPEID = new URIImpl("http://xmlns.com/foaf/0.1/skypeID",false);

    /** http://xmlns.com/foaf/0.1/status */
	public static final URI STATUS = new URIImpl("http://xmlns.com/foaf/0.1/status",false);

    /** http://xmlns.com/foaf/0.1/tipjar */
	public static final URI TIPJAR = new URIImpl("http://xmlns.com/foaf/0.1/tipjar",false);

    /** http://xmlns.com/foaf/0.1/topic_interest */
	public static final URI TOPICINTEREST = new URIImpl("http://xmlns.com/foaf/0.1/topic_interest",false);

    /** http://xmlns.com/foaf/0.1/weblog */
	public static final URI WEBLOG = new URIImpl("http://xmlns.com/foaf/0.1/weblog",false);

    /** http://xmlns.com/foaf/0.1/yahooChatID */
	public static final URI YAHOOCHATID = new URIImpl("http://xmlns.com/foaf/0.1/yahooChatID",false);

    /** 
     * All property-URIs with this class as domain.
     * All properties of all super-classes are also available. 
     */
    public static final URI[] MANAGED_URIS = {
      new URIImpl("http://xmlns.com/foaf/0.1/aimChatID",false),
      new URIImpl("http://xmlns.com/foaf/0.1/account",false),
      new URIImpl("http://xmlns.com/foaf/0.1/age",false),
      new URIImpl("http://xmlns.com/foaf/0.1/birthday",false),
      new URIImpl("http://xmlns.com/foaf/0.1/gender",false),
      new URIImpl("http://xmlns.com/foaf/0.1/holdsAccount",false),
      new URIImpl("http://xmlns.com/foaf/0.1/icqChatID",false),
      new URIImpl("http://xmlns.com/foaf/0.1/interest",false),
      new URIImpl("http://xmlns.com/foaf/0.1/jabberID",false),
      new URIImpl("http://xmlns.com/foaf/0.1/msnChatID",false),
      new URIImpl("http://xmlns.com/foaf/0.1/made",false),
      new URIImpl("http://xmlns.com/foaf/0.1/openid",false),
      new URIImpl("http://xmlns.com/foaf/0.1/mbox",false),
      new URIImpl("http://xmlns.com/foaf/0.1/mbox_sha1sum",false),
      new URIImpl("http://xmlns.com/foaf/0.1/skypeID",false),
      new URIImpl("http://xmlns.com/foaf/0.1/status",false),
      new URIImpl("http://xmlns.com/foaf/0.1/tipjar",false),
      new URIImpl("http://xmlns.com/foaf/0.1/topic_interest",false),
      new URIImpl("http://xmlns.com/foaf/0.1/weblog",false),
      new URIImpl("http://xmlns.com/foaf/0.1/yahooChatID",false),
    };


	// protected constructors needed for inheritance
	
	/**
	 * Returns a Java wrapper over an RDF object, identified by URI.
	 * Creating two wrappers for the same instanceURI is legal.
	 * @param model RDF2GO Model implementation, see http://rdf2go.semweb4j.org
	 * @param classURI URI of RDFS class
	 * @param instanceIdentifier Resource that identifies this instance
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 *
	 * [Generated from RDFReactor template rule #c1] 
	 */
	protected Agent ( Model model, URI classURI, org.ontoware.rdf2go.model.node.Resource instanceIdentifier, boolean write ) {
		super(model, classURI, instanceIdentifier, write);
	}

	// public constructors

	/**
	 * Returns a Java wrapper over an RDF object, identified by URI.
	 * Creating two wrappers for the same instanceURI is legal.
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param instanceIdentifier an RDF2Go Resource identifying this instance
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 *
	 * [Generated from RDFReactor template rule #c2] 
	 */
	public Agent ( Model model, org.ontoware.rdf2go.model.node.Resource instanceIdentifier, boolean write ) {
		super(model, RDFS_CLASS, instanceIdentifier, write);
	}


	/**
	 * Returns a Java wrapper over an RDF object, identified by a URI, given as a String.
	 * Creating two wrappers for the same URI is legal.
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param uriString a URI given as a String
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 * @throws ModelRuntimeException if URI syntax is wrong
	 *
	 * [Generated from RDFReactor template rule #c7] 
	 */
	public Agent ( Model model, String uriString, boolean write) throws ModelRuntimeException {
		super(model, RDFS_CLASS, new URIImpl(uriString,false), write);
	}

	/**
	 * Returns a Java wrapper over an RDF object, identified by a blank node.
	 * Creating two wrappers for the same blank node is legal.
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param bnode BlankNode of this instance
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 *
	 * [Generated from RDFReactor template rule #c8] 
	 */
	public Agent ( Model model, BlankNode bnode, boolean write ) {
		super(model, RDFS_CLASS, bnode, write);
	}

	/**
	 * Returns a Java wrapper over an RDF object, identified by 
	 * a randomly generated URI.
	 * Creating two wrappers results in different URIs.
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 *
	 * [Generated from RDFReactor template rule #c9] 
	 */
	public Agent ( Model model, boolean write ) {
		super(model, RDFS_CLASS, model.newRandomUniqueURI(), write);
	}

    ///////////////////////////////////////////////////////////////////
    // typing

	/**
	 * Return an existing instance of this class in the model. No statements are written.
	 * @param model an RDF2Go model
	 * @param instanceResource an RDF2Go resource
	 * @return an instance of Agent  or null if none existst
	 *
	 * [Generated from RDFReactor template rule #class0] 
	 */
	public static Agent  getInstance(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getInstance(model, instanceResource, Agent.class);
	}

	/**
	 * Create a new instance of this class in the model. 
	 * That is, create the statement (instanceResource, RDF.type, http://xmlns.com/foaf/0.1/Agent).
	 * @param model an RDF2Go model
	 * @param instanceResource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #class1] 
	 */
	public static void createInstance(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.createInstance(model, RDFS_CLASS, instanceResource);
	}

	/**
	 * @param model an RDF2Go model
	 * @param instanceResource an RDF2Go resource
	 * @return true if instanceResource is an instance of this class in the model
	 *
	 * [Generated from RDFReactor template rule #class2] 
	 */
	public static boolean hasInstance(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.hasInstance(model, RDFS_CLASS, instanceResource);
	}

	/**
	 * @param model an RDF2Go model
	 * @return all instances of this class in Model 'model' as RDF resources
	 *
	 * [Generated from RDFReactor template rule #class3] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllInstances(Model model) {
		return Base.getAllInstances(model, RDFS_CLASS, org.ontoware.rdf2go.model.node.Resource.class);
	}

	/**
	 * @param model an RDF2Go model
	 * @return all instances of this class in Model 'model' as a ReactorResult,
	 * which can conveniently be converted to iterator, list or array.
	 *
	 * [Generated from RDFReactor template rule #class3-as] 
	 */
	public static ReactorResult<? extends Agent> getAllInstances_as(Model model) {
		return Base.getAllInstances_as(model, RDFS_CLASS, Agent.class );
	}

    /**
	 * Remove rdf:type Agent from this instance. Other triples are not affected.
	 * To delete more, use deleteAllProperties
	 * @param model an RDF2Go model
	 * @param instanceResource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #class4] 
	 */
	public static void deleteInstance(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.deleteInstance(model, RDFS_CLASS, instanceResource);
	}

	/**
	 * Delete all (this, *, *), i.e. including rdf:type
	 * @param model an RDF2Go model
	 * @param resource
	 */
	public static void deleteAllProperties(Model model,	org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.deleteAllProperties(model, instanceResource);
	}

    ///////////////////////////////////////////////////////////////////
    // property access methods

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as RDF resources, that have a relation 'Maker' to this Agent instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1static] 
	 */
    public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource>
            getAllMaker_Inverse( Model model, Object objectValue ) {
		return Base.getAll_Inverse(model, FOAFThing.MAKER, objectValue);
	}

	/**
	 * @return all A's as RDF resources, that have a relation 'Maker' to this Agent instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1dynamic] 
	 */
    public ClosableIterator<org.ontoware.rdf2go.model.node.Resource>
            getAllMaker_Inverse() {
		return Base.getAll_Inverse(this.model, FOAFThing.MAKER, this.getResource() );
	}

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as a ReactorResult, that have a relation 'Maker' to this Agent instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse-as1static] 
	 */
    public static ReactorResult<org.ontoware.rdf2go.model.node.Resource>
            getAllMaker_Inverse_as( Model model, Object objectValue ) {
		return Base.getAll_Inverse_as(model, FOAFThing.MAKER, objectValue, org.ontoware.rdf2go.model.node.Resource.class);
	}


	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as RDF resources, that have a relation 'Member' to this Agent instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1static] 
	 */
    public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource>
            getAllMember_Inverse( Model model, Object objectValue ) {
		return Base.getAll_Inverse(model, Group.MEMBER, objectValue);
	}

	/**
	 * @return all A's as RDF resources, that have a relation 'Member' to this Agent instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1dynamic] 
	 */
    public ClosableIterator<org.ontoware.rdf2go.model.node.Resource>
            getAllMember_Inverse() {
		return Base.getAll_Inverse(this.model, Group.MEMBER, this.getResource() );
	}

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as a ReactorResult, that have a relation 'Member' to this Agent instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse-as1static] 
	 */
    public static ReactorResult<org.ontoware.rdf2go.model.node.Resource>
            getAllMember_Inverse_as( Model model, Object objectValue ) {
		return Base.getAll_Inverse_as(model, Group.MEMBER, objectValue, org.ontoware.rdf2go.model.node.Resource.class);
	}



    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@5fff4631 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
    public static boolean hasAIMchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.has(model, instanceResource, AIMCHATID);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@5fff4631 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
    public boolean hasAIMchatID() {
		return Base.has(this.model, this.getResource(), AIMCHATID);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@5fff4631 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
    public static boolean hasAIMchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, AIMCHATID, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@5fff4631 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
    public boolean hasAIMchatID( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), AIMCHATID, value);
	}

     /**
     * Get all values of property AIMchatID as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
    public static ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllAIMchatID_asNode( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_asNode(model, instanceResource, AIMCHATID);
	}
	
    /**
     * Get all values of property AIMchatID as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
    public static ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllAIMchatID_asNode_( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, AIMCHATID, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property AIMchatID as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
    public ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllAIMchatID_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), AIMCHATID);
	}

    /**
     * Get all values of property AIMchatID as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
    public ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllAIMchatID_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), AIMCHATID, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property AIMchatID     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
    public static ClosableIterator<java.lang.String> getAllAIMchatID(
            Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll(model, instanceResource, AIMCHATID, java.lang.String.class);
	}
	
    /**
     * Get all values of property AIMchatID as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
    public static ReactorResult<java.lang.String> getAllAIMchatID_as(
            Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, AIMCHATID, java.lang.String.class);
	}

    /**
     * Get all values of property AIMchatID     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
    public ClosableIterator<java.lang.String> getAllAIMchatID() {
		return Base.getAll(this.model, this.getResource(), AIMCHATID, java.lang.String.class);
	}

    /**
     * Get all values of property AIMchatID as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
    public ReactorResult<java.lang.String> getAllAIMchatID_as() {
		return Base.getAll_as(this.model, this.getResource(), AIMCHATID, java.lang.String.class);
	}
 
    /**
     * Adds a value to property AIMchatID as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
    public static void addAIMchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(model, instanceResource, AIMCHATID, value);
	}
	
    /**
     * Adds a value to property AIMchatID as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
    public void addAIMchatID( org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(this.model, this.getResource(), AIMCHATID, value);
	}
    /**
     * Adds a value to property AIMchatID from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
    public static void addAIMchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.add(model, instanceResource, AIMCHATID, value);
	}
	
    /**
     * Adds a value to property AIMchatID from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
    public void addAIMchatID( java.lang.String value ) {
		Base.add(this.model, this.getResource(), AIMCHATID, value);
	}
  

    /**
     * Sets a value of property AIMchatID from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
    public static void setAIMchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(model, instanceResource, AIMCHATID, value);
	}
	
    /**
     * Sets a value of property AIMchatID from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
    public void setAIMchatID( org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(this.model, this.getResource(), AIMCHATID, value);
	}
    /**
     * Sets a value of property AIMchatID from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
    public static void setAIMchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.set(model, instanceResource, AIMCHATID, value);
	}
	
    /**
     * Sets a value of property AIMchatID from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
    public void setAIMchatID( java.lang.String value ) {
		Base.set(this.model, this.getResource(), AIMCHATID, value);
	}
  


    /**
     * Removes a value of property AIMchatID as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
    public static void removeAIMchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(model, instanceResource, AIMCHATID, value);
	}
	
    /**
     * Removes a value of property AIMchatID as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
    public void removeAIMchatID( org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(this.model, this.getResource(), AIMCHATID, value);
	}
    /**
     * Removes a value of property AIMchatID given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
    public static void removeAIMchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.remove(model, instanceResource, AIMCHATID, value);
	}
	
    /**
     * Removes a value of property AIMchatID given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
    public void removeAIMchatID( java.lang.String value ) {
		Base.remove(this.model, this.getResource(), AIMCHATID, value);
	}
  
    /**
     * Removes all values of property AIMchatID     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
    public static void removeAllAIMchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		Base.removeAll(model, instanceResource, AIMCHATID);
	}
	
    /**
     * Removes all values of property AIMchatID	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
    public void removeAllAIMchatID() {
		Base.removeAll(this.model, this.getResource(), AIMCHATID);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@2354e586 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
    public static boolean hasAccount( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.has(model, instanceResource, ACCOUNT);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@2354e586 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
    public boolean hasAccount() {
		return Base.has(this.model, this.getResource(), ACCOUNT);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@2354e586 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
    public static boolean hasAccount( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, ACCOUNT, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@2354e586 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
    public boolean hasAccount( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), ACCOUNT, value);
	}

     /**
     * Get all values of property Account as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
    public static ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllAccount_asNode( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_asNode(model, instanceResource, ACCOUNT);
	}
	
    /**
     * Get all values of property Account as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
    public static ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllAccount_asNode_( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, ACCOUNT, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Account as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
    public ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllAccount_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), ACCOUNT);
	}

    /**
     * Get all values of property Account as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
    public ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllAccount_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), ACCOUNT, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Account     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
    public static ClosableIterator<OnlineAccount> getAllAccount( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll(model, instanceResource, ACCOUNT, OnlineAccount.class);
	}
	
    /**
     * Get all values of property Account as a ReactorResult of OnlineAccount 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
    public static ReactorResult<OnlineAccount> getAllAccount_as( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, ACCOUNT, OnlineAccount.class);
	}

    /**
     * Get all values of property Account     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
    public ClosableIterator<OnlineAccount> getAllAccount() {
		return Base.getAll(this.model, this.getResource(), ACCOUNT, OnlineAccount.class);
	}

    /**
     * Get all values of property Account as a ReactorResult of OnlineAccount 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
    public ReactorResult<OnlineAccount> getAllAccount_as() {
		return Base.getAll_as(this.model, this.getResource(), ACCOUNT, OnlineAccount.class);
	}
 
    /**
     * Adds a value to property Account as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
    public static void addAccount( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(model, instanceResource, ACCOUNT, value);
	}
	
    /**
     * Adds a value to property Account as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
    public void addAccount( org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(this.model, this.getResource(), ACCOUNT, value);
	}
    /**
     * Adds a value to property Account from an instance of OnlineAccount 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
    public static void addAccount( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            OnlineAccount value ) {
		Base.add(model, instanceResource, ACCOUNT, value);
	}
	
    /**
     * Adds a value to property Account from an instance of OnlineAccount 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
    public void addAccount( OnlineAccount value ) {
		Base.add(this.model, this.getResource(), ACCOUNT, value);
	}
  

    /**
     * Sets a value of property Account from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
    public static void setAccount( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(model, instanceResource, ACCOUNT, value);
	}
	
    /**
     * Sets a value of property Account from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
    public void setAccount( org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(this.model, this.getResource(), ACCOUNT, value);
	}
    /**
     * Sets a value of property Account from an instance of OnlineAccount 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
    public static void setAccount( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            OnlineAccount value ) {
		Base.set(model, instanceResource, ACCOUNT, value);
	}
	
    /**
     * Sets a value of property Account from an instance of OnlineAccount 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
    public void setAccount( OnlineAccount value ) {
		Base.set(this.model, this.getResource(), ACCOUNT, value);
	}
  


    /**
     * Removes a value of property Account as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
    public static void removeAccount( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(model, instanceResource, ACCOUNT, value);
	}
	
    /**
     * Removes a value of property Account as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
    public void removeAccount( org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(this.model, this.getResource(), ACCOUNT, value);
	}
    /**
     * Removes a value of property Account given as an instance of OnlineAccount 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
    public static void removeAccount( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            OnlineAccount value ) {
		Base.remove(model, instanceResource, ACCOUNT, value);
	}
	
    /**
     * Removes a value of property Account given as an instance of OnlineAccount 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
    public void removeAccount( OnlineAccount value ) {
		Base.remove(this.model, this.getResource(), ACCOUNT, value);
	}
  
    /**
     * Removes all values of property Account     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
    public static void removeAllAccount( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		Base.removeAll(model, instanceResource, ACCOUNT);
	}
	
    /**
     * Removes all values of property Account	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
    public void removeAllAccount() {
		Base.removeAll(this.model, this.getResource(), ACCOUNT);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1311cccd has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
    public static boolean hasAge( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.has(model, instanceResource, AGE);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1311cccd has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
    public boolean hasAge() {
		return Base.has(this.model, this.getResource(), AGE);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1311cccd has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
    public static boolean hasAge( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, AGE, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1311cccd has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
    public boolean hasAge( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), AGE, value);
	}

     /**
     * Get all values of property Age as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
    public static ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllAge_asNode( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_asNode(model, instanceResource, AGE);
	}
	
    /**
     * Get all values of property Age as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
    public static ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllAge_asNode_( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, AGE, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Age as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
    public ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllAge_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), AGE);
	}

    /**
     * Get all values of property Age as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
    public ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllAge_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), AGE, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Age     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
    public static ClosableIterator<java.lang.String> getAllAge( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll(model, instanceResource, AGE, java.lang.String.class);
	}
	
    /**
     * Get all values of property Age as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
    public static ReactorResult<java.lang.String> getAllAge_as( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, AGE, java.lang.String.class);
	}

    /**
     * Get all values of property Age     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
    public ClosableIterator<java.lang.String> getAllAge() {
		return Base.getAll(this.model, this.getResource(), AGE, java.lang.String.class);
	}

    /**
     * Get all values of property Age as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
    public ReactorResult<java.lang.String> getAllAge_as() {
		return Base.getAll_as(this.model, this.getResource(), AGE, java.lang.String.class);
	}
 
    /**
     * Adds a value to property Age as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
    public static void addAge( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(model, instanceResource, AGE, value);
	}
	
    /**
     * Adds a value to property Age as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
    public void addAge( org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(this.model, this.getResource(), AGE, value);
	}
    /**
     * Adds a value to property Age from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
    public static void addAge( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.add(model, instanceResource, AGE, value);
	}
	
    /**
     * Adds a value to property Age from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
    public void addAge( java.lang.String value ) {
		Base.add(this.model, this.getResource(), AGE, value);
	}
  

    /**
     * Sets a value of property Age from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
    public static void setAge( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(model, instanceResource, AGE, value);
	}
	
    /**
     * Sets a value of property Age from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
    public void setAge( org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(this.model, this.getResource(), AGE, value);
	}
    /**
     * Sets a value of property Age from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
    public static void setAge( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.set(model, instanceResource, AGE, value);
	}
	
    /**
     * Sets a value of property Age from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
    public void setAge( java.lang.String value ) {
		Base.set(this.model, this.getResource(), AGE, value);
	}
  


    /**
     * Removes a value of property Age as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
    public static void removeAge( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(model, instanceResource, AGE, value);
	}
	
    /**
     * Removes a value of property Age as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
    public void removeAge( org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(this.model, this.getResource(), AGE, value);
	}
    /**
     * Removes a value of property Age given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
    public static void removeAge( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.remove(model, instanceResource, AGE, value);
	}
	
    /**
     * Removes a value of property Age given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
    public void removeAge( java.lang.String value ) {
		Base.remove(this.model, this.getResource(), AGE, value);
	}
  
    /**
     * Removes all values of property Age     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
    public static void removeAllAge( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		Base.removeAll(model, instanceResource, AGE);
	}
	
    /**
     * Removes all values of property Age	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
    public void removeAllAge() {
		Base.removeAll(this.model, this.getResource(), AGE);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@38ae35d has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
    public static boolean hasBirthday( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.has(model, instanceResource, BIRTHDAY);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@38ae35d has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
    public boolean hasBirthday() {
		return Base.has(this.model, this.getResource(), BIRTHDAY);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@38ae35d has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
    public static boolean hasBirthday( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, BIRTHDAY, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@38ae35d has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
    public boolean hasBirthday( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), BIRTHDAY, value);
	}

     /**
     * Get all values of property Birthday as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
    public static ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllBirthday_asNode( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_asNode(model, instanceResource, BIRTHDAY);
	}
	
    /**
     * Get all values of property Birthday as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
    public static ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllBirthday_asNode_( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, BIRTHDAY, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Birthday as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
    public ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllBirthday_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), BIRTHDAY);
	}

    /**
     * Get all values of property Birthday as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
    public ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllBirthday_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), BIRTHDAY, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Birthday     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
    public static ClosableIterator<java.lang.String> getAllBirthday(
            Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll(model, instanceResource, BIRTHDAY, java.lang.String.class);
	}
	
    /**
     * Get all values of property Birthday as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
    public static ReactorResult<java.lang.String> getAllBirthday_as(
            Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, BIRTHDAY, java.lang.String.class);
	}

    /**
     * Get all values of property Birthday     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
    public ClosableIterator<java.lang.String> getAllBirthday() {
		return Base.getAll(this.model, this.getResource(), BIRTHDAY, java.lang.String.class);
	}

    /**
     * Get all values of property Birthday as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
    public ReactorResult<java.lang.String> getAllBirthday_as() {
		return Base.getAll_as(this.model, this.getResource(), BIRTHDAY, java.lang.String.class);
	}
 
    /**
     * Adds a value to property Birthday as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
    public static void addBirthday( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(model, instanceResource, BIRTHDAY, value);
	}
	
    /**
     * Adds a value to property Birthday as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
    public void addBirthday( org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(this.model, this.getResource(), BIRTHDAY, value);
	}
    /**
     * Adds a value to property Birthday from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
    public static void addBirthday( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.add(model, instanceResource, BIRTHDAY, value);
	}
	
    /**
     * Adds a value to property Birthday from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
    public void addBirthday( java.lang.String value ) {
		Base.add(this.model, this.getResource(), BIRTHDAY, value);
	}
  

    /**
     * Sets a value of property Birthday from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
    public static void setBirthday( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(model, instanceResource, BIRTHDAY, value);
	}
	
    /**
     * Sets a value of property Birthday from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
    public void setBirthday( org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(this.model, this.getResource(), BIRTHDAY, value);
	}
    /**
     * Sets a value of property Birthday from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
    public static void setBirthday( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.set(model, instanceResource, BIRTHDAY, value);
	}
	
    /**
     * Sets a value of property Birthday from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
    public void setBirthday( java.lang.String value ) {
		Base.set(this.model, this.getResource(), BIRTHDAY, value);
	}
  


    /**
     * Removes a value of property Birthday as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
    public static void removeBirthday( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(model, instanceResource, BIRTHDAY, value);
	}
	
    /**
     * Removes a value of property Birthday as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
    public void removeBirthday( org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(this.model, this.getResource(), BIRTHDAY, value);
	}
    /**
     * Removes a value of property Birthday given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
    public static void removeBirthday( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.remove(model, instanceResource, BIRTHDAY, value);
	}
	
    /**
     * Removes a value of property Birthday given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
    public void removeBirthday( java.lang.String value ) {
		Base.remove(this.model, this.getResource(), BIRTHDAY, value);
	}
  
    /**
     * Removes all values of property Birthday     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
    public static void removeAllBirthday( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		Base.removeAll(model, instanceResource, BIRTHDAY);
	}
	
    /**
     * Removes all values of property Birthday	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
    public void removeAllBirthday() {
		Base.removeAll(this.model, this.getResource(), BIRTHDAY);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@154575ea has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
    public static boolean hasGender( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.has(model, instanceResource, GENDER);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@154575ea has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
    public boolean hasGender() {
		return Base.has(this.model, this.getResource(), GENDER);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@154575ea has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
    public static boolean hasGender( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, GENDER, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@154575ea has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
    public boolean hasGender( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), GENDER, value);
	}

     /**
     * Get all values of property Gender as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
    public static ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllGender_asNode( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_asNode(model, instanceResource, GENDER);
	}
	
    /**
     * Get all values of property Gender as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
    public static ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllGender_asNode_( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, GENDER, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Gender as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
    public ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllGender_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), GENDER);
	}

    /**
     * Get all values of property Gender as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
    public ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllGender_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), GENDER, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Gender     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
    public static ClosableIterator<java.lang.String> getAllGender( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll(model, instanceResource, GENDER, java.lang.String.class);
	}
	
    /**
     * Get all values of property Gender as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
    public static ReactorResult<java.lang.String> getAllGender_as( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, GENDER, java.lang.String.class);
	}

    /**
     * Get all values of property Gender     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
    public ClosableIterator<java.lang.String> getAllGender() {
		return Base.getAll(this.model, this.getResource(), GENDER, java.lang.String.class);
	}

    /**
     * Get all values of property Gender as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
    public ReactorResult<java.lang.String> getAllGender_as() {
		return Base.getAll_as(this.model, this.getResource(), GENDER, java.lang.String.class);
	}
 
    /**
     * Adds a value to property Gender as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
    public static void addGender( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(model, instanceResource, GENDER, value);
	}
	
    /**
     * Adds a value to property Gender as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
    public void addGender( org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(this.model, this.getResource(), GENDER, value);
	}
    /**
     * Adds a value to property Gender from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
    public static void addGender( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.add(model, instanceResource, GENDER, value);
	}
	
    /**
     * Adds a value to property Gender from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
    public void addGender( java.lang.String value ) {
		Base.add(this.model, this.getResource(), GENDER, value);
	}
  

    /**
     * Sets a value of property Gender from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
    public static void setGender( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(model, instanceResource, GENDER, value);
	}
	
    /**
     * Sets a value of property Gender from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
    public void setGender( org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(this.model, this.getResource(), GENDER, value);
	}
    /**
     * Sets a value of property Gender from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
    public static void setGender( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.set(model, instanceResource, GENDER, value);
	}
	
    /**
     * Sets a value of property Gender from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
    public void setGender( java.lang.String value ) {
		Base.set(this.model, this.getResource(), GENDER, value);
	}
  


    /**
     * Removes a value of property Gender as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
    public static void removeGender( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(model, instanceResource, GENDER, value);
	}
	
    /**
     * Removes a value of property Gender as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
    public void removeGender( org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(this.model, this.getResource(), GENDER, value);
	}
    /**
     * Removes a value of property Gender given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
    public static void removeGender( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.remove(model, instanceResource, GENDER, value);
	}
	
    /**
     * Removes a value of property Gender given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
    public void removeGender( java.lang.String value ) {
		Base.remove(this.model, this.getResource(), GENDER, value);
	}
  
    /**
     * Removes all values of property Gender     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
    public static void removeAllGender( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		Base.removeAll(model, instanceResource, GENDER);
	}
	
    /**
     * Removes all values of property Gender	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
    public void removeAllGender() {
		Base.removeAll(this.model, this.getResource(), GENDER);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1b1325d3 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
    public static boolean hasHoldsAccount( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.has(model, instanceResource, HOLDSACCOUNT);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1b1325d3 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
    public boolean hasHoldsAccount() {
		return Base.has(this.model, this.getResource(), HOLDSACCOUNT);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1b1325d3 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
    public static boolean hasHoldsAccount( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, HOLDSACCOUNT, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1b1325d3 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
    public boolean hasHoldsAccount( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), HOLDSACCOUNT, value);
	}

     /**
     * Get all values of property HoldsAccount as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
    public static ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllHoldsAccount_asNode( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_asNode(model, instanceResource, HOLDSACCOUNT);
	}
	
    /**
     * Get all values of property HoldsAccount as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
    public static ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllHoldsAccount_asNode_( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, HOLDSACCOUNT, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property HoldsAccount as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
    public ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllHoldsAccount_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), HOLDSACCOUNT);
	}

    /**
     * Get all values of property HoldsAccount as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
    public ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllHoldsAccount_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), HOLDSACCOUNT, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property HoldsAccount     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
    public static ClosableIterator<OnlineAccount> getAllHoldsAccount(
            Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll(model, instanceResource, HOLDSACCOUNT, OnlineAccount.class);
	}
	
    /**
     * Get all values of property HoldsAccount as a ReactorResult of OnlineAccount 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
    public static ReactorResult<OnlineAccount> getAllHoldsAccount_as(
            Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, HOLDSACCOUNT, OnlineAccount.class);
	}

    /**
     * Get all values of property HoldsAccount     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
    public ClosableIterator<OnlineAccount> getAllHoldsAccount() {
		return Base.getAll(this.model, this.getResource(), HOLDSACCOUNT, OnlineAccount.class);
	}

    /**
     * Get all values of property HoldsAccount as a ReactorResult of OnlineAccount 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
    public ReactorResult<OnlineAccount> getAllHoldsAccount_as() {
		return Base.getAll_as(this.model, this.getResource(), HOLDSACCOUNT, OnlineAccount.class);
	}
 
    /**
     * Adds a value to property HoldsAccount as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
    public static void addHoldsAccount( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(model, instanceResource, HOLDSACCOUNT, value);
	}
	
    /**
     * Adds a value to property HoldsAccount as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
    public void addHoldsAccount( org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(this.model, this.getResource(), HOLDSACCOUNT, value);
	}
    /**
     * Adds a value to property HoldsAccount from an instance of OnlineAccount 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
    public static void addHoldsAccount( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            OnlineAccount value ) {
		Base.add(model, instanceResource, HOLDSACCOUNT, value);
	}
	
    /**
     * Adds a value to property HoldsAccount from an instance of OnlineAccount 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
    public void addHoldsAccount( OnlineAccount value ) {
		Base.add(this.model, this.getResource(), HOLDSACCOUNT, value);
	}
  

    /**
     * Sets a value of property HoldsAccount from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
    public static void setHoldsAccount( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(model, instanceResource, HOLDSACCOUNT, value);
	}
	
    /**
     * Sets a value of property HoldsAccount from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
    public void setHoldsAccount( org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(this.model, this.getResource(), HOLDSACCOUNT, value);
	}
    /**
     * Sets a value of property HoldsAccount from an instance of OnlineAccount 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
    public static void setHoldsAccount( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            OnlineAccount value ) {
		Base.set(model, instanceResource, HOLDSACCOUNT, value);
	}
	
    /**
     * Sets a value of property HoldsAccount from an instance of OnlineAccount 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
    public void setHoldsAccount( OnlineAccount value ) {
		Base.set(this.model, this.getResource(), HOLDSACCOUNT, value);
	}
  


    /**
     * Removes a value of property HoldsAccount as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
    public static void removeHoldsAccount( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(model, instanceResource, HOLDSACCOUNT, value);
	}
	
    /**
     * Removes a value of property HoldsAccount as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
    public void removeHoldsAccount( org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(this.model, this.getResource(), HOLDSACCOUNT, value);
	}
    /**
     * Removes a value of property HoldsAccount given as an instance of OnlineAccount 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
    public static void removeHoldsAccount( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            OnlineAccount value ) {
		Base.remove(model, instanceResource, HOLDSACCOUNT, value);
	}
	
    /**
     * Removes a value of property HoldsAccount given as an instance of OnlineAccount 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
    public void removeHoldsAccount( OnlineAccount value ) {
		Base.remove(this.model, this.getResource(), HOLDSACCOUNT, value);
	}
  
    /**
     * Removes all values of property HoldsAccount     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
    public static void removeAllHoldsAccount( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		Base.removeAll(model, instanceResource, HOLDSACCOUNT);
	}
	
    /**
     * Removes all values of property HoldsAccount	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
    public void removeAllHoldsAccount() {
		Base.removeAll(this.model, this.getResource(), HOLDSACCOUNT);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@4d4987e8 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
    public static boolean hasICQchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.has(model, instanceResource, ICQCHATID);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@4d4987e8 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
    public boolean hasICQchatID() {
		return Base.has(this.model, this.getResource(), ICQCHATID);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@4d4987e8 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
    public static boolean hasICQchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, ICQCHATID, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@4d4987e8 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
    public boolean hasICQchatID( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), ICQCHATID, value);
	}

     /**
     * Get all values of property ICQchatID as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
    public static ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllICQchatID_asNode( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_asNode(model, instanceResource, ICQCHATID);
	}
	
    /**
     * Get all values of property ICQchatID as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
    public static ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllICQchatID_asNode_( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, ICQCHATID, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property ICQchatID as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
    public ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllICQchatID_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), ICQCHATID);
	}

    /**
     * Get all values of property ICQchatID as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
    public ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllICQchatID_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), ICQCHATID, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property ICQchatID     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
    public static ClosableIterator<java.lang.String> getAllICQchatID(
            Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll(model, instanceResource, ICQCHATID, java.lang.String.class);
	}
	
    /**
     * Get all values of property ICQchatID as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
    public static ReactorResult<java.lang.String> getAllICQchatID_as(
            Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, ICQCHATID, java.lang.String.class);
	}

    /**
     * Get all values of property ICQchatID     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
    public ClosableIterator<java.lang.String> getAllICQchatID() {
		return Base.getAll(this.model, this.getResource(), ICQCHATID, java.lang.String.class);
	}

    /**
     * Get all values of property ICQchatID as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
    public ReactorResult<java.lang.String> getAllICQchatID_as() {
		return Base.getAll_as(this.model, this.getResource(), ICQCHATID, java.lang.String.class);
	}
 
    /**
     * Adds a value to property ICQchatID as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
    public static void addICQchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(model, instanceResource, ICQCHATID, value);
	}
	
    /**
     * Adds a value to property ICQchatID as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
    public void addICQchatID( org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(this.model, this.getResource(), ICQCHATID, value);
	}
    /**
     * Adds a value to property ICQchatID from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
    public static void addICQchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.add(model, instanceResource, ICQCHATID, value);
	}
	
    /**
     * Adds a value to property ICQchatID from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
    public void addICQchatID( java.lang.String value ) {
		Base.add(this.model, this.getResource(), ICQCHATID, value);
	}
  

    /**
     * Sets a value of property ICQchatID from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
    public static void setICQchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(model, instanceResource, ICQCHATID, value);
	}
	
    /**
     * Sets a value of property ICQchatID from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
    public void setICQchatID( org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(this.model, this.getResource(), ICQCHATID, value);
	}
    /**
     * Sets a value of property ICQchatID from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
    public static void setICQchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.set(model, instanceResource, ICQCHATID, value);
	}
	
    /**
     * Sets a value of property ICQchatID from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
    public void setICQchatID( java.lang.String value ) {
		Base.set(this.model, this.getResource(), ICQCHATID, value);
	}
  


    /**
     * Removes a value of property ICQchatID as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
    public static void removeICQchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(model, instanceResource, ICQCHATID, value);
	}
	
    /**
     * Removes a value of property ICQchatID as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
    public void removeICQchatID( org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(this.model, this.getResource(), ICQCHATID, value);
	}
    /**
     * Removes a value of property ICQchatID given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
    public static void removeICQchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.remove(model, instanceResource, ICQCHATID, value);
	}
	
    /**
     * Removes a value of property ICQchatID given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
    public void removeICQchatID( java.lang.String value ) {
		Base.remove(this.model, this.getResource(), ICQCHATID, value);
	}
  
    /**
     * Removes all values of property ICQchatID     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
    public static void removeAllICQchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		Base.removeAll(model, instanceResource, ICQCHATID);
	}
	
    /**
     * Removes all values of property ICQchatID	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
    public void removeAllICQchatID() {
		Base.removeAll(this.model, this.getResource(), ICQCHATID);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@110bc849 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
    public static boolean hasInterest( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.has(model, instanceResource, INTEREST);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@110bc849 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
    public boolean hasInterest() {
		return Base.has(this.model, this.getResource(), INTEREST);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@110bc849 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
    public static boolean hasInterest( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, INTEREST, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@110bc849 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
    public boolean hasInterest( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), INTEREST, value);
	}

     /**
     * Get all values of property Interest as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
    public static ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllInterest_asNode( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_asNode(model, instanceResource, INTEREST);
	}
	
    /**
     * Get all values of property Interest as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
    public static ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllInterest_asNode_( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, INTEREST, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Interest as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
    public ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllInterest_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), INTEREST);
	}

    /**
     * Get all values of property Interest as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
    public ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllInterest_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), INTEREST, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Interest     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
    public static ClosableIterator<Document> getAllInterest( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll(model, instanceResource, INTEREST, Document.class);
	}
	
    /**
     * Get all values of property Interest as a ReactorResult of Document 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
    public static ReactorResult<Document> getAllInterest_as( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, INTEREST, Document.class);
	}

    /**
     * Get all values of property Interest     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
    public ClosableIterator<Document> getAllInterest() {
		return Base.getAll(this.model, this.getResource(), INTEREST, Document.class);
	}

    /**
     * Get all values of property Interest as a ReactorResult of Document 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
    public ReactorResult<Document> getAllInterest_as() {
		return Base.getAll_as(this.model, this.getResource(), INTEREST, Document.class);
	}
 
    /**
     * Adds a value to property Interest as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
    public static void addInterest( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(model, instanceResource, INTEREST, value);
	}
	
    /**
     * Adds a value to property Interest as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
    public void addInterest( org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(this.model, this.getResource(), INTEREST, value);
	}
    /**
     * Adds a value to property Interest from an instance of Document 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
    public static void addInterest( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            Document value ) {
		Base.add(model, instanceResource, INTEREST, value);
	}
	
    /**
     * Adds a value to property Interest from an instance of Document 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
    public void addInterest( Document value ) {
		Base.add(this.model, this.getResource(), INTEREST, value);
	}
  

    /**
     * Sets a value of property Interest from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
    public static void setInterest( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(model, instanceResource, INTEREST, value);
	}
	
    /**
     * Sets a value of property Interest from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
    public void setInterest( org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(this.model, this.getResource(), INTEREST, value);
	}
    /**
     * Sets a value of property Interest from an instance of Document 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
    public static void setInterest( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            Document value ) {
		Base.set(model, instanceResource, INTEREST, value);
	}
	
    /**
     * Sets a value of property Interest from an instance of Document 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
    public void setInterest( Document value ) {
		Base.set(this.model, this.getResource(), INTEREST, value);
	}
  


    /**
     * Removes a value of property Interest as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
    public static void removeInterest( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(model, instanceResource, INTEREST, value);
	}
	
    /**
     * Removes a value of property Interest as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
    public void removeInterest( org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(this.model, this.getResource(), INTEREST, value);
	}
    /**
     * Removes a value of property Interest given as an instance of Document 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
    public static void removeInterest( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            Document value ) {
		Base.remove(model, instanceResource, INTEREST, value);
	}
	
    /**
     * Removes a value of property Interest given as an instance of Document 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
    public void removeInterest( Document value ) {
		Base.remove(this.model, this.getResource(), INTEREST, value);
	}
  
    /**
     * Removes all values of property Interest     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
    public static void removeAllInterest( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		Base.removeAll(model, instanceResource, INTEREST);
	}
	
    /**
     * Removes all values of property Interest	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
    public void removeAllInterest() {
		Base.removeAll(this.model, this.getResource(), INTEREST);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@3cecd278 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
    public static boolean hasJabberID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.has(model, instanceResource, JABBERID);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@3cecd278 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
    public boolean hasJabberID() {
		return Base.has(this.model, this.getResource(), JABBERID);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@3cecd278 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
    public static boolean hasJabberID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, JABBERID, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@3cecd278 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
    public boolean hasJabberID( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), JABBERID, value);
	}

     /**
     * Get all values of property JabberID as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
    public static ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllJabberID_asNode( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_asNode(model, instanceResource, JABBERID);
	}
	
    /**
     * Get all values of property JabberID as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
    public static ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllJabberID_asNode_( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, JABBERID, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property JabberID as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
    public ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllJabberID_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), JABBERID);
	}

    /**
     * Get all values of property JabberID as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
    public ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllJabberID_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), JABBERID, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property JabberID     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
    public static ClosableIterator<java.lang.String> getAllJabberID(
            Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll(model, instanceResource, JABBERID, java.lang.String.class);
	}
	
    /**
     * Get all values of property JabberID as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
    public static ReactorResult<java.lang.String> getAllJabberID_as(
            Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, JABBERID, java.lang.String.class);
	}

    /**
     * Get all values of property JabberID     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
    public ClosableIterator<java.lang.String> getAllJabberID() {
		return Base.getAll(this.model, this.getResource(), JABBERID, java.lang.String.class);
	}

    /**
     * Get all values of property JabberID as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
    public ReactorResult<java.lang.String> getAllJabberID_as() {
		return Base.getAll_as(this.model, this.getResource(), JABBERID, java.lang.String.class);
	}
 
    /**
     * Adds a value to property JabberID as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
    public static void addJabberID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(model, instanceResource, JABBERID, value);
	}
	
    /**
     * Adds a value to property JabberID as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
    public void addJabberID( org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(this.model, this.getResource(), JABBERID, value);
	}
    /**
     * Adds a value to property JabberID from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
    public static void addJabberID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.add(model, instanceResource, JABBERID, value);
	}
	
    /**
     * Adds a value to property JabberID from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
    public void addJabberID( java.lang.String value ) {
		Base.add(this.model, this.getResource(), JABBERID, value);
	}
  

    /**
     * Sets a value of property JabberID from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
    public static void setJabberID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(model, instanceResource, JABBERID, value);
	}
	
    /**
     * Sets a value of property JabberID from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
    public void setJabberID( org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(this.model, this.getResource(), JABBERID, value);
	}
    /**
     * Sets a value of property JabberID from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
    public static void setJabberID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.set(model, instanceResource, JABBERID, value);
	}
	
    /**
     * Sets a value of property JabberID from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
    public void setJabberID( java.lang.String value ) {
		Base.set(this.model, this.getResource(), JABBERID, value);
	}
  


    /**
     * Removes a value of property JabberID as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
    public static void removeJabberID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(model, instanceResource, JABBERID, value);
	}
	
    /**
     * Removes a value of property JabberID as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
    public void removeJabberID( org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(this.model, this.getResource(), JABBERID, value);
	}
    /**
     * Removes a value of property JabberID given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
    public static void removeJabberID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.remove(model, instanceResource, JABBERID, value);
	}
	
    /**
     * Removes a value of property JabberID given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
    public void removeJabberID( java.lang.String value ) {
		Base.remove(this.model, this.getResource(), JABBERID, value);
	}
  
    /**
     * Removes all values of property JabberID     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
    public static void removeAllJabberID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		Base.removeAll(model, instanceResource, JABBERID);
	}
	
    /**
     * Removes all values of property JabberID	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
    public void removeAllJabberID() {
		Base.removeAll(this.model, this.getResource(), JABBERID);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@49dbfd5a has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
    public static boolean hasMSNchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.has(model, instanceResource, MSNCHATID);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@49dbfd5a has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
    public boolean hasMSNchatID() {
		return Base.has(this.model, this.getResource(), MSNCHATID);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@49dbfd5a has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
    public static boolean hasMSNchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, MSNCHATID, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@49dbfd5a has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
    public boolean hasMSNchatID( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), MSNCHATID, value);
	}

     /**
     * Get all values of property MSNchatID as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
    public static ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllMSNchatID_asNode( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_asNode(model, instanceResource, MSNCHATID);
	}
	
    /**
     * Get all values of property MSNchatID as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
    public static ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllMSNchatID_asNode_( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, MSNCHATID, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property MSNchatID as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
    public ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllMSNchatID_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), MSNCHATID);
	}

    /**
     * Get all values of property MSNchatID as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
    public ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllMSNchatID_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), MSNCHATID, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property MSNchatID     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
    public static ClosableIterator<java.lang.String> getAllMSNchatID(
            Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll(model, instanceResource, MSNCHATID, java.lang.String.class);
	}
	
    /**
     * Get all values of property MSNchatID as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
    public static ReactorResult<java.lang.String> getAllMSNchatID_as(
            Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, MSNCHATID, java.lang.String.class);
	}

    /**
     * Get all values of property MSNchatID     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
    public ClosableIterator<java.lang.String> getAllMSNchatID() {
		return Base.getAll(this.model, this.getResource(), MSNCHATID, java.lang.String.class);
	}

    /**
     * Get all values of property MSNchatID as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
    public ReactorResult<java.lang.String> getAllMSNchatID_as() {
		return Base.getAll_as(this.model, this.getResource(), MSNCHATID, java.lang.String.class);
	}
 
    /**
     * Adds a value to property MSNchatID as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
    public static void addMSNchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(model, instanceResource, MSNCHATID, value);
	}
	
    /**
     * Adds a value to property MSNchatID as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
    public void addMSNchatID( org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(this.model, this.getResource(), MSNCHATID, value);
	}
    /**
     * Adds a value to property MSNchatID from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
    public static void addMSNchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.add(model, instanceResource, MSNCHATID, value);
	}
	
    /**
     * Adds a value to property MSNchatID from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
    public void addMSNchatID( java.lang.String value ) {
		Base.add(this.model, this.getResource(), MSNCHATID, value);
	}
  

    /**
     * Sets a value of property MSNchatID from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
    public static void setMSNchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(model, instanceResource, MSNCHATID, value);
	}
	
    /**
     * Sets a value of property MSNchatID from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
    public void setMSNchatID( org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(this.model, this.getResource(), MSNCHATID, value);
	}
    /**
     * Sets a value of property MSNchatID from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
    public static void setMSNchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.set(model, instanceResource, MSNCHATID, value);
	}
	
    /**
     * Sets a value of property MSNchatID from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
    public void setMSNchatID( java.lang.String value ) {
		Base.set(this.model, this.getResource(), MSNCHATID, value);
	}
  


    /**
     * Removes a value of property MSNchatID as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
    public static void removeMSNchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(model, instanceResource, MSNCHATID, value);
	}
	
    /**
     * Removes a value of property MSNchatID as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
    public void removeMSNchatID( org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(this.model, this.getResource(), MSNCHATID, value);
	}
    /**
     * Removes a value of property MSNchatID given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
    public static void removeMSNchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.remove(model, instanceResource, MSNCHATID, value);
	}
	
    /**
     * Removes a value of property MSNchatID given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
    public void removeMSNchatID( java.lang.String value ) {
		Base.remove(this.model, this.getResource(), MSNCHATID, value);
	}
  
    /**
     * Removes all values of property MSNchatID     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
    public static void removeAllMSNchatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		Base.removeAll(model, instanceResource, MSNCHATID);
	}
	
    /**
     * Removes all values of property MSNchatID	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
    public void removeAllMSNchatID() {
		Base.removeAll(this.model, this.getResource(), MSNCHATID);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@37d0df29 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
    public static boolean hasMade( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.has(model, instanceResource, MADE);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@37d0df29 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
    public boolean hasMade() {
		return Base.has(this.model, this.getResource(), MADE);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@37d0df29 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
    public static boolean hasMade( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, MADE, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@37d0df29 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
    public boolean hasMade( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), MADE, value);
	}

     /**
     * Get all values of property Made as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
    public static ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllMade_asNode( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_asNode(model, instanceResource, MADE);
	}
	
    /**
     * Get all values of property Made as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
    public static ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllMade_asNode_( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, MADE, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Made as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
    public ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllMade_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), MADE);
	}

    /**
     * Get all values of property Made as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
    public ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllMade_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), MADE, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Made     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
    public static ClosableIterator<org.ontoware.rdfreactor.schema.owl.OwlThing>
            getAllMade(
            Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
        return Base.getAll( model, instanceResource, MADE,
                org.ontoware.rdfreactor.schema.owl.OwlThing.class );
	}
	
    /**
     * Get all values of property Made as a ReactorResult of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * @param model
     *            an RDF2Go model
     * @param resource
     *            an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to
     *         iterator, list or array
     * 
     *         [Generated from RDFReactor template rule
     *         #get11static-reactorresult]
     */
    public static ReactorResult<org.ontoware.rdfreactor.schema.owl.OwlThing>
            getAllMade_as(
            Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
        return Base.getAll_as( model, instanceResource, MADE,
                org.ontoware.rdfreactor.schema.owl.OwlThing.class );
	}

    /**
     * Get all values of property Made     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
    public ClosableIterator<org.ontoware.rdfreactor.schema.owl.OwlThing>
            getAllMade() {
        return Base.getAll( this.model, this.getResource(), MADE,
                org.ontoware.rdfreactor.schema.owl.OwlThing.class );
	}

    /**
     * Get all values of property Made as a ReactorResult of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * @return a ReactorResult of $type which can conveniently be converted to
     *         iterator, list or array
     * 
     *         [Generated from RDFReactor template rule
     *         #get12dynamic-reactorresult]
     */
    public ReactorResult<org.ontoware.rdfreactor.schema.owl.OwlThing>
            getAllMade_as() {
        return Base.getAll_as( this.model, this.getResource(), MADE,
                org.ontoware.rdfreactor.schema.owl.OwlThing.class );
	}
 
    /**
     * Adds a value to property Made as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
    public static void addMade( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(model, instanceResource, MADE, value);
	}
	
    /**
     * Adds a value to property Made as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
    public void addMade( org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(this.model, this.getResource(), MADE, value);
	}
    
    /**
     * Adds a value to property Made from an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * @param model
     *            an RDF2Go model
     * @param resource
     *            an RDF2Go resource
     * 
     *            [Generated from RDFReactor template rule #add3static]
     */
    public static void addMade( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.add(model, instanceResource, MADE, value);
	}
	
    /**
     * Adds a value to property Made from an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * [Generated from RDFReactor template rule #add4dynamic]
     */
    public void addMade( org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.add(this.model, this.getResource(), MADE, value);
	}
  

    /**
     * Sets a value of property Made from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
    public static void setMade( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(model, instanceResource, MADE, value);
	}
	
    /**
     * Sets a value of property Made from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
    public void setMade( org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(this.model, this.getResource(), MADE, value);
	}
    
    /**
     * Sets a value of property Made from an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing First, all existing values
     * are removed, then this value is added. Cardinality constraints are not
     * checked, but this method exists only for properties with no
     * minCardinality or minCardinality == 1.
     * 
     * @param model
     *            an RDF2Go model
     * @param resource
     *            an RDF2Go resource
     * @param value
     *            the value to be added
     * 
     *            [Generated from RDFReactor template rule #set3static]
     */
    public static void setMade( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.set(model, instanceResource, MADE, value);
	}
	
    /**
     * Sets a value of property Made from an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing First, all existing values
     * are removed, then this value is added. Cardinality constraints are not
     * checked, but this method exists only for properties with no
     * minCardinality or minCardinality == 1.
     * 
     * @param value
     *            the value to be added
     * 
     *            [Generated from RDFReactor template rule #set4dynamic]
     */
    public void setMade( org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.set(this.model, this.getResource(), MADE, value);
	}
  


    /**
     * Removes a value of property Made as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
    public static void removeMade( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(model, instanceResource, MADE, value);
	}
	
    /**
     * Removes a value of property Made as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
    public void removeMade( org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(this.model, this.getResource(), MADE, value);
	}
    
    /**
     * Removes a value of property Made given as an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * @param model
     *            an RDF2Go model
     * @param resource
     *            an RDF2Go resource
     * @param value
     *            the value to be removed
     * 
     *            [Generated from RDFReactor template rule #remove3static]
     */
    public static void removeMade( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.remove(model, instanceResource, MADE, value);
	}
	
    /**
     * Removes a value of property Made given as an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * @param value
     *            the value to be removed
     * 
     *            [Generated from RDFReactor template rule #remove4dynamic]
     */
    public void removeMade(
            org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.remove(this.model, this.getResource(), MADE, value);
	}
  
    /**
     * Removes all values of property Made     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
    public static void removeAllMade( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		Base.removeAll(model, instanceResource, MADE);
	}
	
    /**
     * Removes all values of property Made	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
    public void removeAllMade() {
		Base.removeAll(this.model, this.getResource(), MADE);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@47cf7e4a has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
    public static boolean hasOpenid( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.has(model, instanceResource, OPENID);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@47cf7e4a has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
    public boolean hasOpenid() {
		return Base.has(this.model, this.getResource(), OPENID);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@47cf7e4a has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
    public static boolean hasOpenid( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, OPENID, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@47cf7e4a has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
    public boolean hasOpenid( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), OPENID, value);
	}

     /**
     * Get all values of property Openid as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
    public static ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllOpenid_asNode( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_asNode(model, instanceResource, OPENID);
	}
	
    /**
     * Get all values of property Openid as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
    public static ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllOpenid_asNode_( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, OPENID, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Openid as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
    public ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllOpenid_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), OPENID);
	}

    /**
     * Get all values of property Openid as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
    public ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllOpenid_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), OPENID, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Openid     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
    public static ClosableIterator<Document> getAllOpenid( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll(model, instanceResource, OPENID, Document.class);
	}
	
    /**
     * Get all values of property Openid as a ReactorResult of Document 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
    public static ReactorResult<Document> getAllOpenid_as( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, OPENID, Document.class);
	}

    /**
     * Get all values of property Openid     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
    public ClosableIterator<Document> getAllOpenid() {
		return Base.getAll(this.model, this.getResource(), OPENID, Document.class);
	}

    /**
     * Get all values of property Openid as a ReactorResult of Document 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
    public ReactorResult<Document> getAllOpenid_as() {
		return Base.getAll_as(this.model, this.getResource(), OPENID, Document.class);
	}
 
    /**
     * Adds a value to property Openid as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
    public static void addOpenid( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(model, instanceResource, OPENID, value);
	}
	
    /**
     * Adds a value to property Openid as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
    public void addOpenid( org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(this.model, this.getResource(), OPENID, value);
	}
    /**
     * Adds a value to property Openid from an instance of Document 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
    public static void addOpenid( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            Document value ) {
		Base.add(model, instanceResource, OPENID, value);
	}
	
    /**
     * Adds a value to property Openid from an instance of Document 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
    public void addOpenid( Document value ) {
		Base.add(this.model, this.getResource(), OPENID, value);
	}
  

    /**
     * Sets a value of property Openid from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
    public static void setOpenid( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(model, instanceResource, OPENID, value);
	}
	
    /**
     * Sets a value of property Openid from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
    public void setOpenid( org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(this.model, this.getResource(), OPENID, value);
	}
    /**
     * Sets a value of property Openid from an instance of Document 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
    public static void setOpenid( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            Document value ) {
		Base.set(model, instanceResource, OPENID, value);
	}
	
    /**
     * Sets a value of property Openid from an instance of Document 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
    public void setOpenid( Document value ) {
		Base.set(this.model, this.getResource(), OPENID, value);
	}
  


    /**
     * Removes a value of property Openid as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
    public static void removeOpenid( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(model, instanceResource, OPENID, value);
	}
	
    /**
     * Removes a value of property Openid as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
    public void removeOpenid( org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(this.model, this.getResource(), OPENID, value);
	}
    /**
     * Removes a value of property Openid given as an instance of Document 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
    public static void removeOpenid( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            Document value ) {
		Base.remove(model, instanceResource, OPENID, value);
	}
	
    /**
     * Removes a value of property Openid given as an instance of Document 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
    public void removeOpenid( Document value ) {
		Base.remove(this.model, this.getResource(), OPENID, value);
	}
  
    /**
     * Removes all values of property Openid     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
    public static void removeAllOpenid( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		Base.removeAll(model, instanceResource, OPENID);
	}
	
    /**
     * Removes all values of property Openid	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
    public void removeAllOpenid() {
		Base.removeAll(this.model, this.getResource(), OPENID);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@4af2f72c has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
    public static boolean hasPersonalmailbox( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.has(model, instanceResource, PERSONALMAILBOX);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@4af2f72c has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
    public boolean hasPersonalmailbox() {
		return Base.has(this.model, this.getResource(), PERSONALMAILBOX);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@4af2f72c has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
    public static boolean hasPersonalmailbox( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, PERSONALMAILBOX, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@4af2f72c has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
    public boolean
            hasPersonalmailbox( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), PERSONALMAILBOX, value);
	}

     /**
     * Get all values of property Personalmailbox as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
    public static ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllPersonalmailbox_asNode( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_asNode(model, instanceResource, PERSONALMAILBOX);
	}
	
    /**
     * Get all values of property Personalmailbox as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
    public static ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllPersonalmailbox_asNode_( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, PERSONALMAILBOX, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Personalmailbox as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
    public ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllPersonalmailbox_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), PERSONALMAILBOX);
	}

    /**
     * Get all values of property Personalmailbox as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
    public ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllPersonalmailbox_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), PERSONALMAILBOX, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Personalmailbox     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
    public static ClosableIterator<org.ontoware.rdfreactor.schema.owl.OwlThing>
            getAllPersonalmailbox(
            Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
        return Base.getAll( model, instanceResource, PERSONALMAILBOX,
                org.ontoware.rdfreactor.schema.owl.OwlThing.class );
	}
	
    /**
     * Get all values of property Personalmailbox as a ReactorResult of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * @param model
     *            an RDF2Go model
     * @param resource
     *            an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to
     *         iterator, list or array
     * 
     *         [Generated from RDFReactor template rule
     *         #get11static-reactorresult]
     */
    public static ReactorResult<org.ontoware.rdfreactor.schema.owl.OwlThing>
            getAllPersonalmailbox_as(
            Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
        return Base.getAll_as( model, instanceResource, PERSONALMAILBOX,
                org.ontoware.rdfreactor.schema.owl.OwlThing.class );
	}

    /**
     * Get all values of property Personalmailbox     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
    public ClosableIterator<org.ontoware.rdfreactor.schema.owl.OwlThing>
            getAllPersonalmailbox() {
        return Base.getAll( this.model, this.getResource(), PERSONALMAILBOX,
                org.ontoware.rdfreactor.schema.owl.OwlThing.class );
	}

    /**
     * Get all values of property Personalmailbox as a ReactorResult of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * @return a ReactorResult of $type which can conveniently be converted to
     *         iterator, list or array
     * 
     *         [Generated from RDFReactor template rule
     *         #get12dynamic-reactorresult]
     */
    public ReactorResult<org.ontoware.rdfreactor.schema.owl.OwlThing>
            getAllPersonalmailbox_as() {
        return Base.getAll_as( this.model, this.getResource(), PERSONALMAILBOX,
                org.ontoware.rdfreactor.schema.owl.OwlThing.class );
	}
 
    /**
     * Adds a value to property Personalmailbox as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
    public static void addPersonalmailbox( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(model, instanceResource, PERSONALMAILBOX, value);
	}
	
    /**
     * Adds a value to property Personalmailbox as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
    public void addPersonalmailbox( org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(this.model, this.getResource(), PERSONALMAILBOX, value);
	}
    
    /**
     * Adds a value to property Personalmailbox from an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * @param model
     *            an RDF2Go model
     * @param resource
     *            an RDF2Go resource
     * 
     *            [Generated from RDFReactor template rule #add3static]
     */
    public static void addPersonalmailbox( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.add(model, instanceResource, PERSONALMAILBOX, value);
	}
	
    /**
     * Adds a value to property Personalmailbox from an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * [Generated from RDFReactor template rule #add4dynamic]
     */
    public void addPersonalmailbox(
            org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.add(this.model, this.getResource(), PERSONALMAILBOX, value);
	}
  

    /**
     * Sets a value of property Personalmailbox from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
    public static void setPersonalmailbox( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(model, instanceResource, PERSONALMAILBOX, value);
	}
	
    /**
     * Sets a value of property Personalmailbox from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
    public void setPersonalmailbox( org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(this.model, this.getResource(), PERSONALMAILBOX, value);
	}
    
    /**
     * Sets a value of property Personalmailbox from an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing First, all existing values
     * are removed, then this value is added. Cardinality constraints are not
     * checked, but this method exists only for properties with no
     * minCardinality or minCardinality == 1.
     * 
     * @param model
     *            an RDF2Go model
     * @param resource
     *            an RDF2Go resource
     * @param value
     *            the value to be added
     * 
     *            [Generated from RDFReactor template rule #set3static]
     */
    public static void setPersonalmailbox( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.set(model, instanceResource, PERSONALMAILBOX, value);
	}
	
    /**
     * Sets a value of property Personalmailbox from an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing First, all existing values
     * are removed, then this value is added. Cardinality constraints are not
     * checked, but this method exists only for properties with no
     * minCardinality or minCardinality == 1.
     * 
     * @param value
     *            the value to be added
     * 
     *            [Generated from RDFReactor template rule #set4dynamic]
     */
    public void setPersonalmailbox(
            org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.set(this.model, this.getResource(), PERSONALMAILBOX, value);
	}
  


    /**
     * Removes a value of property Personalmailbox as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
    public static void removePersonalmailbox( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(model, instanceResource, PERSONALMAILBOX, value);
	}
	
    /**
     * Removes a value of property Personalmailbox as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
    public void
            removePersonalmailbox( org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(this.model, this.getResource(), PERSONALMAILBOX, value);
	}
    
    /**
     * Removes a value of property Personalmailbox given as an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * @param model
     *            an RDF2Go model
     * @param resource
     *            an RDF2Go resource
     * @param value
     *            the value to be removed
     * 
     *            [Generated from RDFReactor template rule #remove3static]
     */
    public static void removePersonalmailbox( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.remove(model, instanceResource, PERSONALMAILBOX, value);
	}
	
    /**
     * Removes a value of property Personalmailbox given as an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * @param value
     *            the value to be removed
     * 
     *            [Generated from RDFReactor template rule #remove4dynamic]
     */
    public void removePersonalmailbox(
            org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.remove(this.model, this.getResource(), PERSONALMAILBOX, value);
	}
  
    /**
     * Removes all values of property Personalmailbox     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
    public static void removeAllPersonalmailbox( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		Base.removeAll(model, instanceResource, PERSONALMAILBOX);
	}
	
    /**
     * Removes all values of property Personalmailbox	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
    public void removeAllPersonalmailbox() {
		Base.removeAll(this.model, this.getResource(), PERSONALMAILBOX);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@6dffcd26 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
    public static boolean hasSha1sumofapersonalmailboxURIname( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.has(model, instanceResource, SHA1SUMOFAPERSONALMAILBOXURINAME);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@6dffcd26 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
    public boolean hasSha1sumofapersonalmailboxURIname() {
		return Base.has(this.model, this.getResource(), SHA1SUMOFAPERSONALMAILBOXURINAME);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@6dffcd26 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
    public static boolean hasSha1sumofapersonalmailboxURIname( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, SHA1SUMOFAPERSONALMAILBOXURINAME, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@6dffcd26 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
    public boolean hasSha1sumofapersonalmailboxURIname(
            org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), SHA1SUMOFAPERSONALMAILBOXURINAME, value);
	}

     /**
     * Get all values of property Sha1sumofapersonalmailboxURIname as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
    public static ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllSha1sumofapersonalmailboxURIname_asNode( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_asNode(model, instanceResource, SHA1SUMOFAPERSONALMAILBOXURINAME);
	}
	
    /**
     * Get all values of property Sha1sumofapersonalmailboxURIname as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
    public static ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllSha1sumofapersonalmailboxURIname_asNode_( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, SHA1SUMOFAPERSONALMAILBOXURINAME, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Sha1sumofapersonalmailboxURIname as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
    public ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllSha1sumofapersonalmailboxURIname_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), SHA1SUMOFAPERSONALMAILBOXURINAME);
	}

    /**
     * Get all values of property Sha1sumofapersonalmailboxURIname as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
    public ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllSha1sumofapersonalmailboxURIname_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), SHA1SUMOFAPERSONALMAILBOXURINAME, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Sha1sumofapersonalmailboxURIname     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
    public static ClosableIterator<java.lang.String>
            getAllSha1sumofapersonalmailboxURIname( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll(model, instanceResource, SHA1SUMOFAPERSONALMAILBOXURINAME, java.lang.String.class);
	}
	
    /**
     * Get all values of property Sha1sumofapersonalmailboxURIname as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
    public static ReactorResult<java.lang.String>
            getAllSha1sumofapersonalmailboxURIname_as( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, SHA1SUMOFAPERSONALMAILBOXURINAME, java.lang.String.class);
	}

    /**
     * Get all values of property Sha1sumofapersonalmailboxURIname     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
    public ClosableIterator<java.lang.String>
            getAllSha1sumofapersonalmailboxURIname() {
		return Base.getAll(this.model, this.getResource(), SHA1SUMOFAPERSONALMAILBOXURINAME, java.lang.String.class);
	}

    /**
     * Get all values of property Sha1sumofapersonalmailboxURIname as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
    public ReactorResult<java.lang.String>
            getAllSha1sumofapersonalmailboxURIname_as() {
		return Base.getAll_as(this.model, this.getResource(), SHA1SUMOFAPERSONALMAILBOXURINAME, java.lang.String.class);
	}
 
    /**
     * Adds a value to property Sha1sumofapersonalmailboxURIname as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
    public static void addSha1sumofapersonalmailboxURIname( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(model, instanceResource, SHA1SUMOFAPERSONALMAILBOXURINAME, value);
	}
	
    /**
     * Adds a value to property Sha1sumofapersonalmailboxURIname as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
    public void addSha1sumofapersonalmailboxURIname(
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(this.model, this.getResource(), SHA1SUMOFAPERSONALMAILBOXURINAME, value);
	}
    /**
     * Adds a value to property Sha1sumofapersonalmailboxURIname from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
    public static void addSha1sumofapersonalmailboxURIname( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.add(model, instanceResource, SHA1SUMOFAPERSONALMAILBOXURINAME, value);
	}
	
    /**
     * Adds a value to property Sha1sumofapersonalmailboxURIname from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
    public void addSha1sumofapersonalmailboxURIname( java.lang.String value ) {
		Base.add(this.model, this.getResource(), SHA1SUMOFAPERSONALMAILBOXURINAME, value);
	}
  

    /**
     * Sets a value of property Sha1sumofapersonalmailboxURIname from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
    public static void setSha1sumofapersonalmailboxURIname( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(model, instanceResource, SHA1SUMOFAPERSONALMAILBOXURINAME, value);
	}
	
    /**
     * Sets a value of property Sha1sumofapersonalmailboxURIname from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
    public void setSha1sumofapersonalmailboxURIname(
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(this.model, this.getResource(), SHA1SUMOFAPERSONALMAILBOXURINAME, value);
	}
    /**
     * Sets a value of property Sha1sumofapersonalmailboxURIname from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
    public static void setSha1sumofapersonalmailboxURIname( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.set(model, instanceResource, SHA1SUMOFAPERSONALMAILBOXURINAME, value);
	}
	
    /**
     * Sets a value of property Sha1sumofapersonalmailboxURIname from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
    public void setSha1sumofapersonalmailboxURIname( java.lang.String value ) {
		Base.set(this.model, this.getResource(), SHA1SUMOFAPERSONALMAILBOXURINAME, value);
	}
  


    /**
     * Removes a value of property Sha1sumofapersonalmailboxURIname as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
    public static void removeSha1sumofapersonalmailboxURIname( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(model, instanceResource, SHA1SUMOFAPERSONALMAILBOXURINAME, value);
	}
	
    /**
     * Removes a value of property Sha1sumofapersonalmailboxURIname as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
    public void removeSha1sumofapersonalmailboxURIname(
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(this.model, this.getResource(), SHA1SUMOFAPERSONALMAILBOXURINAME, value);
	}
    /**
     * Removes a value of property Sha1sumofapersonalmailboxURIname given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
    public static void removeSha1sumofapersonalmailboxURIname( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.remove(model, instanceResource, SHA1SUMOFAPERSONALMAILBOXURINAME, value);
	}
	
    /**
     * Removes a value of property Sha1sumofapersonalmailboxURIname given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
    public void removeSha1sumofapersonalmailboxURIname( java.lang.String value ) {
		Base.remove(this.model, this.getResource(), SHA1SUMOFAPERSONALMAILBOXURINAME, value);
	}
  
    /**
     * Removes all values of property Sha1sumofapersonalmailboxURIname     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
    public static void removeAllSha1sumofapersonalmailboxURIname( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		Base.removeAll(model, instanceResource, SHA1SUMOFAPERSONALMAILBOXURINAME);
	}
	
    /**
     * Removes all values of property Sha1sumofapersonalmailboxURIname	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
    public void removeAllSha1sumofapersonalmailboxURIname() {
		Base.removeAll(this.model, this.getResource(), SHA1SUMOFAPERSONALMAILBOXURINAME);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@61b834b9 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
    public static boolean hasSkypeID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.has(model, instanceResource, SKYPEID);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@61b834b9 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
    public boolean hasSkypeID() {
		return Base.has(this.model, this.getResource(), SKYPEID);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@61b834b9 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
    public static boolean hasSkypeID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, SKYPEID, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@61b834b9 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
    public boolean hasSkypeID( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), SKYPEID, value);
	}

     /**
     * Get all values of property SkypeID as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
    public static ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllSkypeID_asNode( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_asNode(model, instanceResource, SKYPEID);
	}
	
    /**
     * Get all values of property SkypeID as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
    public static ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllSkypeID_asNode_( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, SKYPEID, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property SkypeID as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
    public ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllSkypeID_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), SKYPEID);
	}

    /**
     * Get all values of property SkypeID as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
    public ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllSkypeID_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), SKYPEID, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property SkypeID     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
    public static ClosableIterator<java.lang.String> getAllSkypeID(
            Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll(model, instanceResource, SKYPEID, java.lang.String.class);
	}
	
    /**
     * Get all values of property SkypeID as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
    public static ReactorResult<java.lang.String> getAllSkypeID_as(
            Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, SKYPEID, java.lang.String.class);
	}

    /**
     * Get all values of property SkypeID     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
    public ClosableIterator<java.lang.String> getAllSkypeID() {
		return Base.getAll(this.model, this.getResource(), SKYPEID, java.lang.String.class);
	}

    /**
     * Get all values of property SkypeID as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
    public ReactorResult<java.lang.String> getAllSkypeID_as() {
		return Base.getAll_as(this.model, this.getResource(), SKYPEID, java.lang.String.class);
	}
 
    /**
     * Adds a value to property SkypeID as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
    public static void addSkypeID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(model, instanceResource, SKYPEID, value);
	}
	
    /**
     * Adds a value to property SkypeID as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
    public void addSkypeID( org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(this.model, this.getResource(), SKYPEID, value);
	}
    /**
     * Adds a value to property SkypeID from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
    public static void addSkypeID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.add(model, instanceResource, SKYPEID, value);
	}
	
    /**
     * Adds a value to property SkypeID from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
    public void addSkypeID( java.lang.String value ) {
		Base.add(this.model, this.getResource(), SKYPEID, value);
	}
  

    /**
     * Sets a value of property SkypeID from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
    public static void setSkypeID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(model, instanceResource, SKYPEID, value);
	}
	
    /**
     * Sets a value of property SkypeID from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
    public void setSkypeID( org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(this.model, this.getResource(), SKYPEID, value);
	}
    /**
     * Sets a value of property SkypeID from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
    public static void setSkypeID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.set(model, instanceResource, SKYPEID, value);
	}
	
    /**
     * Sets a value of property SkypeID from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
    public void setSkypeID( java.lang.String value ) {
		Base.set(this.model, this.getResource(), SKYPEID, value);
	}
  


    /**
     * Removes a value of property SkypeID as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
    public static void removeSkypeID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(model, instanceResource, SKYPEID, value);
	}
	
    /**
     * Removes a value of property SkypeID as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
    public void removeSkypeID( org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(this.model, this.getResource(), SKYPEID, value);
	}
    /**
     * Removes a value of property SkypeID given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
    public static void removeSkypeID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.remove(model, instanceResource, SKYPEID, value);
	}
	
    /**
     * Removes a value of property SkypeID given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
    public void removeSkypeID( java.lang.String value ) {
		Base.remove(this.model, this.getResource(), SKYPEID, value);
	}
  
    /**
     * Removes all values of property SkypeID     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
    public static void removeAllSkypeID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		Base.removeAll(model, instanceResource, SKYPEID);
	}
	
    /**
     * Removes all values of property SkypeID	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
    public void removeAllSkypeID() {
		Base.removeAll(this.model, this.getResource(), SKYPEID);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@3fd770aa has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
    public static boolean hasStatus( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.has(model, instanceResource, STATUS);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@3fd770aa has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
    public boolean hasStatus() {
		return Base.has(this.model, this.getResource(), STATUS);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@3fd770aa has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
    public static boolean hasStatus( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, STATUS, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@3fd770aa has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
    public boolean hasStatus( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), STATUS, value);
	}

     /**
     * Get all values of property Status as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
    public static ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllStatus_asNode( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_asNode(model, instanceResource, STATUS);
	}
	
    /**
     * Get all values of property Status as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
    public static ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllStatus_asNode_( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, STATUS, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Status as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
    public ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllStatus_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), STATUS);
	}

    /**
     * Get all values of property Status as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
    public ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllStatus_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), STATUS, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Status     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
    public static ClosableIterator<java.lang.String> getAllStatus( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll(model, instanceResource, STATUS, java.lang.String.class);
	}
	
    /**
     * Get all values of property Status as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
    public static ReactorResult<java.lang.String> getAllStatus_as( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, STATUS, java.lang.String.class);
	}

    /**
     * Get all values of property Status     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
    public ClosableIterator<java.lang.String> getAllStatus() {
		return Base.getAll(this.model, this.getResource(), STATUS, java.lang.String.class);
	}

    /**
     * Get all values of property Status as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
    public ReactorResult<java.lang.String> getAllStatus_as() {
		return Base.getAll_as(this.model, this.getResource(), STATUS, java.lang.String.class);
	}
 
    /**
     * Adds a value to property Status as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
    public static void addStatus( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(model, instanceResource, STATUS, value);
	}
	
    /**
     * Adds a value to property Status as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
    public void addStatus( org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(this.model, this.getResource(), STATUS, value);
	}
    /**
     * Adds a value to property Status from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
    public static void addStatus( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.add(model, instanceResource, STATUS, value);
	}
	
    /**
     * Adds a value to property Status from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
    public void addStatus( java.lang.String value ) {
		Base.add(this.model, this.getResource(), STATUS, value);
	}
  

    /**
     * Sets a value of property Status from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
    public static void setStatus( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(model, instanceResource, STATUS, value);
	}
	
    /**
     * Sets a value of property Status from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
    public void setStatus( org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(this.model, this.getResource(), STATUS, value);
	}
    /**
     * Sets a value of property Status from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
    public static void setStatus( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.set(model, instanceResource, STATUS, value);
	}
	
    /**
     * Sets a value of property Status from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
    public void setStatus( java.lang.String value ) {
		Base.set(this.model, this.getResource(), STATUS, value);
	}
  


    /**
     * Removes a value of property Status as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
    public static void removeStatus( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(model, instanceResource, STATUS, value);
	}
	
    /**
     * Removes a value of property Status as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
    public void removeStatus( org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(this.model, this.getResource(), STATUS, value);
	}
    /**
     * Removes a value of property Status given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
    public static void removeStatus( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.remove(model, instanceResource, STATUS, value);
	}
	
    /**
     * Removes a value of property Status given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
    public void removeStatus( java.lang.String value ) {
		Base.remove(this.model, this.getResource(), STATUS, value);
	}
  
    /**
     * Removes all values of property Status     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
    public static void removeAllStatus( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		Base.removeAll(model, instanceResource, STATUS);
	}
	
    /**
     * Removes all values of property Status	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
    public void removeAllStatus() {
		Base.removeAll(this.model, this.getResource(), STATUS);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@4c15d87c has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
    public static boolean hasTipjar( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.has(model, instanceResource, TIPJAR);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@4c15d87c has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
    public boolean hasTipjar() {
		return Base.has(this.model, this.getResource(), TIPJAR);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@4c15d87c has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
    public static boolean hasTipjar( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, TIPJAR, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@4c15d87c has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
    public boolean hasTipjar( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), TIPJAR, value);
	}

     /**
     * Get all values of property Tipjar as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
    public static ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllTipjar_asNode( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_asNode(model, instanceResource, TIPJAR);
	}
	
    /**
     * Get all values of property Tipjar as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
    public static ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllTipjar_asNode_( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, TIPJAR, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Tipjar as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
    public ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllTipjar_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), TIPJAR);
	}

    /**
     * Get all values of property Tipjar as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
    public ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllTipjar_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), TIPJAR, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Tipjar     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
    public static ClosableIterator<Document> getAllTipjar( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll(model, instanceResource, TIPJAR, Document.class);
	}
	
    /**
     * Get all values of property Tipjar as a ReactorResult of Document 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
    public static ReactorResult<Document> getAllTipjar_as( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, TIPJAR, Document.class);
	}

    /**
     * Get all values of property Tipjar     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
    public ClosableIterator<Document> getAllTipjar() {
		return Base.getAll(this.model, this.getResource(), TIPJAR, Document.class);
	}

    /**
     * Get all values of property Tipjar as a ReactorResult of Document 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
    public ReactorResult<Document> getAllTipjar_as() {
		return Base.getAll_as(this.model, this.getResource(), TIPJAR, Document.class);
	}
 
    /**
     * Adds a value to property Tipjar as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
    public static void addTipjar( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(model, instanceResource, TIPJAR, value);
	}
	
    /**
     * Adds a value to property Tipjar as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
    public void addTipjar( org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(this.model, this.getResource(), TIPJAR, value);
	}
    /**
     * Adds a value to property Tipjar from an instance of Document 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
    public static void addTipjar( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            Document value ) {
		Base.add(model, instanceResource, TIPJAR, value);
	}
	
    /**
     * Adds a value to property Tipjar from an instance of Document 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
    public void addTipjar( Document value ) {
		Base.add(this.model, this.getResource(), TIPJAR, value);
	}
  

    /**
     * Sets a value of property Tipjar from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
    public static void setTipjar( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(model, instanceResource, TIPJAR, value);
	}
	
    /**
     * Sets a value of property Tipjar from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
    public void setTipjar( org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(this.model, this.getResource(), TIPJAR, value);
	}
    /**
     * Sets a value of property Tipjar from an instance of Document 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
    public static void setTipjar( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            Document value ) {
		Base.set(model, instanceResource, TIPJAR, value);
	}
	
    /**
     * Sets a value of property Tipjar from an instance of Document 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
    public void setTipjar( Document value ) {
		Base.set(this.model, this.getResource(), TIPJAR, value);
	}
  


    /**
     * Removes a value of property Tipjar as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
    public static void removeTipjar( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(model, instanceResource, TIPJAR, value);
	}
	
    /**
     * Removes a value of property Tipjar as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
    public void removeTipjar( org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(this.model, this.getResource(), TIPJAR, value);
	}
    /**
     * Removes a value of property Tipjar given as an instance of Document 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
    public static void removeTipjar( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            Document value ) {
		Base.remove(model, instanceResource, TIPJAR, value);
	}
	
    /**
     * Removes a value of property Tipjar given as an instance of Document 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
    public void removeTipjar( Document value ) {
		Base.remove(this.model, this.getResource(), TIPJAR, value);
	}
  
    /**
     * Removes all values of property Tipjar     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
    public static void removeAllTipjar( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		Base.removeAll(model, instanceResource, TIPJAR);
	}
	
    /**
     * Removes all values of property Tipjar	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
    public void removeAllTipjar() {
		Base.removeAll(this.model, this.getResource(), TIPJAR);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@441b6bab has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
    public static boolean hasTopicinterest( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.has(model, instanceResource, TOPICINTEREST);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@441b6bab has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
    public boolean hasTopicinterest() {
		return Base.has(this.model, this.getResource(), TOPICINTEREST);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@441b6bab has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
    public static boolean hasTopicinterest( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, TOPICINTEREST, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@441b6bab has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
    public boolean hasTopicinterest( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), TOPICINTEREST, value);
	}

     /**
     * Get all values of property Topicinterest as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
    public static ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllTopicinterest_asNode( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_asNode(model, instanceResource, TOPICINTEREST);
	}
	
    /**
     * Get all values of property Topicinterest as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
    public static ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllTopicinterest_asNode_( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, TOPICINTEREST, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Topicinterest as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
    public ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllTopicinterest_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), TOPICINTEREST);
	}

    /**
     * Get all values of property Topicinterest as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
    public ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllTopicinterest_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), TOPICINTEREST, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Topicinterest     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
    public static ClosableIterator<org.ontoware.rdfreactor.schema.owl.OwlThing>
            getAllTopicinterest(
            Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
        return Base.getAll( model, instanceResource, TOPICINTEREST,
                org.ontoware.rdfreactor.schema.owl.OwlThing.class );
	}
	
    /**
     * Get all values of property Topicinterest as a ReactorResult of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * @param model
     *            an RDF2Go model
     * @param resource
     *            an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to
     *         iterator, list or array
     * 
     *         [Generated from RDFReactor template rule
     *         #get11static-reactorresult]
     */
    public static ReactorResult<org.ontoware.rdfreactor.schema.owl.OwlThing>
            getAllTopicinterest_as(
            Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
        return Base.getAll_as( model, instanceResource, TOPICINTEREST,
                org.ontoware.rdfreactor.schema.owl.OwlThing.class );
	}

    /**
     * Get all values of property Topicinterest     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
    public ClosableIterator<org.ontoware.rdfreactor.schema.owl.OwlThing>
            getAllTopicinterest() {
        return Base.getAll( this.model, this.getResource(), TOPICINTEREST,
                org.ontoware.rdfreactor.schema.owl.OwlThing.class );
	}

    /**
     * Get all values of property Topicinterest as a ReactorResult of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * @return a ReactorResult of $type which can conveniently be converted to
     *         iterator, list or array
     * 
     *         [Generated from RDFReactor template rule
     *         #get12dynamic-reactorresult]
     */
    public ReactorResult<org.ontoware.rdfreactor.schema.owl.OwlThing>
            getAllTopicinterest_as() {
        return Base.getAll_as( this.model, this.getResource(), TOPICINTEREST,
                org.ontoware.rdfreactor.schema.owl.OwlThing.class );
	}
 
    /**
     * Adds a value to property Topicinterest as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
    public static void addTopicinterest( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(model, instanceResource, TOPICINTEREST, value);
	}
	
    /**
     * Adds a value to property Topicinterest as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
    public void addTopicinterest( org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(this.model, this.getResource(), TOPICINTEREST, value);
	}
    
    /**
     * Adds a value to property Topicinterest from an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * @param model
     *            an RDF2Go model
     * @param resource
     *            an RDF2Go resource
     * 
     *            [Generated from RDFReactor template rule #add3static]
     */
    public static void addTopicinterest( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.add(model, instanceResource, TOPICINTEREST, value);
	}
	
    /**
     * Adds a value to property Topicinterest from an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * [Generated from RDFReactor template rule #add4dynamic]
     */
    public void addTopicinterest(
            org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.add(this.model, this.getResource(), TOPICINTEREST, value);
	}
  

    /**
     * Sets a value of property Topicinterest from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
    public static void setTopicinterest( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(model, instanceResource, TOPICINTEREST, value);
	}
	
    /**
     * Sets a value of property Topicinterest from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
    public void setTopicinterest( org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(this.model, this.getResource(), TOPICINTEREST, value);
	}
    
    /**
     * Sets a value of property Topicinterest from an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing First, all existing values
     * are removed, then this value is added. Cardinality constraints are not
     * checked, but this method exists only for properties with no
     * minCardinality or minCardinality == 1.
     * 
     * @param model
     *            an RDF2Go model
     * @param resource
     *            an RDF2Go resource
     * @param value
     *            the value to be added
     * 
     *            [Generated from RDFReactor template rule #set3static]
     */
    public static void setTopicinterest( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.set(model, instanceResource, TOPICINTEREST, value);
	}
	
    /**
     * Sets a value of property Topicinterest from an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing First, all existing values
     * are removed, then this value is added. Cardinality constraints are not
     * checked, but this method exists only for properties with no
     * minCardinality or minCardinality == 1.
     * 
     * @param value
     *            the value to be added
     * 
     *            [Generated from RDFReactor template rule #set4dynamic]
     */
    public void setTopicinterest(
            org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.set(this.model, this.getResource(), TOPICINTEREST, value);
	}
  


    /**
     * Removes a value of property Topicinterest as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
    public static void removeTopicinterest( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(model, instanceResource, TOPICINTEREST, value);
	}
	
    /**
     * Removes a value of property Topicinterest as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
    public void removeTopicinterest( org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(this.model, this.getResource(), TOPICINTEREST, value);
	}
    
    /**
     * Removes a value of property Topicinterest given as an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * @param model
     *            an RDF2Go model
     * @param resource
     *            an RDF2Go resource
     * @param value
     *            the value to be removed
     * 
     *            [Generated from RDFReactor template rule #remove3static]
     */
    public static void removeTopicinterest( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.remove(model, instanceResource, TOPICINTEREST, value);
	}
	
    /**
     * Removes a value of property Topicinterest given as an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * @param value
     *            the value to be removed
     * 
     *            [Generated from RDFReactor template rule #remove4dynamic]
     */
    public void removeTopicinterest(
            org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.remove(this.model, this.getResource(), TOPICINTEREST, value);
	}
  
    /**
     * Removes all values of property Topicinterest     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
    public static void removeAllTopicinterest( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		Base.removeAll(model, instanceResource, TOPICINTEREST);
	}
	
    /**
     * Removes all values of property Topicinterest	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
    public void removeAllTopicinterest() {
		Base.removeAll(this.model, this.getResource(), TOPICINTEREST);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@34af863e has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
    public static boolean hasWeblog( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.has(model, instanceResource, WEBLOG);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@34af863e has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
    public boolean hasWeblog() {
		return Base.has(this.model, this.getResource(), WEBLOG);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@34af863e has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
    public static boolean hasWeblog( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, WEBLOG, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@34af863e has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
    public boolean hasWeblog( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), WEBLOG, value);
	}

     /**
     * Get all values of property Weblog as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
    public static ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllWeblog_asNode( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_asNode(model, instanceResource, WEBLOG);
	}
	
    /**
     * Get all values of property Weblog as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
    public static ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllWeblog_asNode_( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, WEBLOG, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Weblog as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
    public ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllWeblog_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), WEBLOG);
	}

    /**
     * Get all values of property Weblog as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
    public ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllWeblog_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), WEBLOG, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Weblog     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
    public static ClosableIterator<Document> getAllWeblog( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll(model, instanceResource, WEBLOG, Document.class);
	}
	
    /**
     * Get all values of property Weblog as a ReactorResult of Document 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
    public static ReactorResult<Document> getAllWeblog_as( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, WEBLOG, Document.class);
	}

    /**
     * Get all values of property Weblog     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
    public ClosableIterator<Document> getAllWeblog() {
		return Base.getAll(this.model, this.getResource(), WEBLOG, Document.class);
	}

    /**
     * Get all values of property Weblog as a ReactorResult of Document 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
    public ReactorResult<Document> getAllWeblog_as() {
		return Base.getAll_as(this.model, this.getResource(), WEBLOG, Document.class);
	}
 
    /**
     * Adds a value to property Weblog as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
    public static void addWeblog( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(model, instanceResource, WEBLOG, value);
	}
	
    /**
     * Adds a value to property Weblog as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
    public void addWeblog( org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(this.model, this.getResource(), WEBLOG, value);
	}
    /**
     * Adds a value to property Weblog from an instance of Document 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
    public static void addWeblog( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            Document value ) {
		Base.add(model, instanceResource, WEBLOG, value);
	}
	
    /**
     * Adds a value to property Weblog from an instance of Document 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
    public void addWeblog( Document value ) {
		Base.add(this.model, this.getResource(), WEBLOG, value);
	}
  

    /**
     * Sets a value of property Weblog from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
    public static void setWeblog( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(model, instanceResource, WEBLOG, value);
	}
	
    /**
     * Sets a value of property Weblog from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
    public void setWeblog( org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(this.model, this.getResource(), WEBLOG, value);
	}
    /**
     * Sets a value of property Weblog from an instance of Document 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
    public static void setWeblog( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            Document value ) {
		Base.set(model, instanceResource, WEBLOG, value);
	}
	
    /**
     * Sets a value of property Weblog from an instance of Document 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
    public void setWeblog( Document value ) {
		Base.set(this.model, this.getResource(), WEBLOG, value);
	}
  


    /**
     * Removes a value of property Weblog as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
    public static void removeWeblog( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(model, instanceResource, WEBLOG, value);
	}
	
    /**
     * Removes a value of property Weblog as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
    public void removeWeblog( org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(this.model, this.getResource(), WEBLOG, value);
	}
    /**
     * Removes a value of property Weblog given as an instance of Document 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
    public static void removeWeblog( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            Document value ) {
		Base.remove(model, instanceResource, WEBLOG, value);
	}
	
    /**
     * Removes a value of property Weblog given as an instance of Document 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
    public void removeWeblog( Document value ) {
		Base.remove(this.model, this.getResource(), WEBLOG, value);
	}
  
    /**
     * Removes all values of property Weblog     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
    public static void removeAllWeblog( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		Base.removeAll(model, instanceResource, WEBLOG);
	}
	
    /**
     * Removes all values of property Weblog	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
    public void removeAllWeblog() {
		Base.removeAll(this.model, this.getResource(), WEBLOG);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@586a5f89 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
    public static boolean hasYahoochatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.has(model, instanceResource, YAHOOCHATID);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@586a5f89 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
    public boolean hasYahoochatID() {
		return Base.has(this.model, this.getResource(), YAHOOCHATID);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@586a5f89 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
    public static boolean hasYahoochatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, YAHOOCHATID, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@586a5f89 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
    public boolean hasYahoochatID( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), YAHOOCHATID, value);
	}

     /**
     * Get all values of property YahoochatID as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
    public static ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllYahoochatID_asNode( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_asNode(model, instanceResource, YAHOOCHATID);
	}
	
    /**
     * Get all values of property YahoochatID as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
    public static ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllYahoochatID_asNode_( Model model,
                    org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, YAHOOCHATID, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property YahoochatID as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
    public ClosableIterator<org.ontoware.rdf2go.model.node.Node>
            getAllYahoochatID_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), YAHOOCHATID);
	}

    /**
     * Get all values of property YahoochatID as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
    public ReactorResult<org.ontoware.rdf2go.model.node.Node>
            getAllYahoochatID_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), YAHOOCHATID, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property YahoochatID     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
    public static ClosableIterator<java.lang.String> getAllYahoochatID(
            Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll(model, instanceResource, YAHOOCHATID, java.lang.String.class);
	}
	
    /**
     * Get all values of property YahoochatID as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
    public static ReactorResult<java.lang.String> getAllYahoochatID_as(
            Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		return Base.getAll_as(model, instanceResource, YAHOOCHATID, java.lang.String.class);
	}

    /**
     * Get all values of property YahoochatID     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
    public ClosableIterator<java.lang.String> getAllYahoochatID() {
		return Base.getAll(this.model, this.getResource(), YAHOOCHATID, java.lang.String.class);
	}

    /**
     * Get all values of property YahoochatID as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
    public ReactorResult<java.lang.String> getAllYahoochatID_as() {
		return Base.getAll_as(this.model, this.getResource(), YAHOOCHATID, java.lang.String.class);
	}
 
    /**
     * Adds a value to property YahoochatID as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
    public static void addYahoochatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(model, instanceResource, YAHOOCHATID, value);
	}
	
    /**
     * Adds a value to property YahoochatID as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
    public void addYahoochatID( org.ontoware.rdf2go.model.node.Node value ) {
		Base.add(this.model, this.getResource(), YAHOOCHATID, value);
	}
    /**
     * Adds a value to property YahoochatID from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
    public static void addYahoochatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.add(model, instanceResource, YAHOOCHATID, value);
	}
	
    /**
     * Adds a value to property YahoochatID from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
    public void addYahoochatID( java.lang.String value ) {
		Base.add(this.model, this.getResource(), YAHOOCHATID, value);
	}
  

    /**
     * Sets a value of property YahoochatID from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
    public static void setYahoochatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(model, instanceResource, YAHOOCHATID, value);
	}
	
    /**
     * Sets a value of property YahoochatID from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
    public void setYahoochatID( org.ontoware.rdf2go.model.node.Node value ) {
		Base.set(this.model, this.getResource(), YAHOOCHATID, value);
	}
    /**
     * Sets a value of property YahoochatID from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
    public static void setYahoochatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.set(model, instanceResource, YAHOOCHATID, value);
	}
	
    /**
     * Sets a value of property YahoochatID from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
    public void setYahoochatID( java.lang.String value ) {
		Base.set(this.model, this.getResource(), YAHOOCHATID, value);
	}
  


    /**
     * Removes a value of property YahoochatID as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
    public static void removeYahoochatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(model, instanceResource, YAHOOCHATID, value);
	}
	
    /**
     * Removes a value of property YahoochatID as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
    public void removeYahoochatID( org.ontoware.rdf2go.model.node.Node value ) {
		Base.remove(this.model, this.getResource(), YAHOOCHATID, value);
	}
    /**
     * Removes a value of property YahoochatID given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
    public static void removeYahoochatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            java.lang.String value ) {
		Base.remove(model, instanceResource, YAHOOCHATID, value);
	}
	
    /**
     * Removes a value of property YahoochatID given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
    public void removeYahoochatID( java.lang.String value ) {
		Base.remove(this.model, this.getResource(), YAHOOCHATID, value);
	}
  
    /**
     * Removes all values of property YahoochatID     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
    public static void removeAllYahoochatID( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
		Base.removeAll(model, instanceResource, YAHOOCHATID);
	}
	
    /**
     * Removes all values of property YahoochatID	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
    public void removeAllYahoochatID() {
		Base.removeAll(this.model, this.getResource(), YAHOOCHATID);
	}
 }