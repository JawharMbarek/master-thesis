/**
 * generated by http://RDFReactor.semweb4j.org ($Id: CodeGenerator.java 1765 2010-02-11 09:51:13Z max.at.xam.de $) on 21.12.12 17:00
 */
package de.m0ep.uni.ma.rdf.foaf;

import org.ontoware.aifbcommons.collection.ClosableIterator;
import org.ontoware.rdf2go.exception.ModelRuntimeException;
import org.ontoware.rdf2go.model.Model;
import org.ontoware.rdf2go.model.node.BlankNode;
import org.ontoware.rdf2go.model.node.URI;
import org.ontoware.rdf2go.model.node.impl.URIImpl;
import org.ontoware.rdfreactor.runtime.Base;
import org.ontoware.rdfreactor.runtime.ReactorResult;

import de.m0ep.uni.ma.rdf.owl.Thing;

/**
 * This class manages access to these properties:
 * <ul>
 *   <li> Primarytopic </li>
 *   <li> Sha1sum_hex_ </li>
 *   <li> Topic </li>
 * </ul>
 *
 * This class was generated by <a href="http://RDFReactor.semweb4j.org">RDFReactor</a> on 21.12.12 17:00
 */
public class Document extends Thing {

    /**
     * 
     */
    private static final long serialVersionUID = 4402140953739742970L;

    /** http://xmlns.com/foaf/0.1/Document */
	public static final URI RDFS_CLASS = new URIImpl("http://xmlns.com/foaf/0.1/Document", false);

    /** http://xmlns.com/foaf/0.1/primaryTopic */
	public static final URI PRIMARYTOPIC = new URIImpl("http://xmlns.com/foaf/0.1/primaryTopic",false);

    /** http://xmlns.com/foaf/0.1/sha1 */
	public static final URI SHA1SUM_HEX_ = new URIImpl("http://xmlns.com/foaf/0.1/sha1",false);

    /** http://xmlns.com/foaf/0.1/topic */
	public static final URI TOPIC = new URIImpl("http://xmlns.com/foaf/0.1/topic",false);

    /** http://www.w3.org/2000/01/rdf-schema#comment */
	public static final URI COMMENT = new URIImpl("http://www.w3.org/2000/01/rdf-schema#comment",false);

    /** http://www.w3.org/2000/01/rdf-schema#label */
	public static final URI LABEL = new URIImpl("http://www.w3.org/2000/01/rdf-schema#label",false);

    /** http://www.w3.org/2000/01/rdf-schema#member */
	public static final URI MEMBER = new URIImpl("http://www.w3.org/2000/01/rdf-schema#member",false);

    /** http://www.w3.org/1999/02/22-rdf-syntax-ns#type */
	public static final URI TYPE = new URIImpl("http://www.w3.org/1999/02/22-rdf-syntax-ns#type",false);

    /** 
     * All property-URIs with this class as domain.
     * All properties of all super-classes are also available. 
     */
    public static final URI[] MANAGED_URIS = {
      new URIImpl("http://xmlns.com/foaf/0.1/primaryTopic",false),
      new URIImpl("http://xmlns.com/foaf/0.1/sha1",false),
      new URIImpl("http://xmlns.com/foaf/0.1/topic",false),
    };


	// protected constructors needed for inheritance
	
	/**
	 * Returns a Java wrapper over an RDF object, identified by URI.
	 * Creating two wrappers for the same instanceURI is legal.
	 * @param model RDF2GO Model implementation, see http://rdf2go.semweb4j.org
	 * @param classURI URI of RDFS class
	 * @param instanceIdentifier Resource that identifies this instance
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 *
	 * [Generated from RDFReactor template rule #c1] 
	 */
	protected Document ( Model model, URI classURI, org.ontoware.rdf2go.model.node.Resource instanceIdentifier, boolean write ) {
		super(model, classURI, instanceIdentifier, write);
	}

	// public constructors

	/**
	 * Returns a Java wrapper over an RDF object, identified by URI.
	 * Creating two wrappers for the same instanceURI is legal.
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param instanceIdentifier an RDF2Go Resource identifying this instance
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 *
	 * [Generated from RDFReactor template rule #c2] 
	 */
	public Document ( Model model, org.ontoware.rdf2go.model.node.Resource instanceIdentifier, boolean write ) {
		super(model, RDFS_CLASS, instanceIdentifier, write);
	}


	/**
	 * Returns a Java wrapper over an RDF object, identified by a URI, given as a String.
	 * Creating two wrappers for the same URI is legal.
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param uriString a URI given as a String
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 * @throws ModelRuntimeException if URI syntax is wrong
	 *
	 * [Generated from RDFReactor template rule #c7] 
	 */
	public Document ( Model model, String uriString, boolean write) throws ModelRuntimeException {
		super(model, RDFS_CLASS, new URIImpl(uriString,false), write);
	}

	/**
	 * Returns a Java wrapper over an RDF object, identified by a blank node.
	 * Creating two wrappers for the same blank node is legal.
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param bnode BlankNode of this instance
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 *
	 * [Generated from RDFReactor template rule #c8] 
	 */
	public Document ( Model model, BlankNode bnode, boolean write ) {
		super(model, RDFS_CLASS, bnode, write);
	}

	/**
	 * Returns a Java wrapper over an RDF object, identified by 
	 * a randomly generated URI.
	 * Creating two wrappers results in different URIs.
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 *
	 * [Generated from RDFReactor template rule #c9] 
	 */
	public Document ( Model model, boolean write ) {
		super(model, RDFS_CLASS, model.newRandomUniqueURI(), write);
	}

    ///////////////////////////////////////////////////////////////////
    // typing

	/**
	 * Return an existing instance of this class in the model. No statements are written.
	 * @param model an RDF2Go model
	 * @param instanceResource an RDF2Go resource
	 * @return an instance of Document  or null if none existst
	 *
	 * [Generated from RDFReactor template rule #class0] 
	 */
	public static Document  getInstance(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getInstance(model, instanceResource, Document.class);
	}

	/**
	 * Create a new instance of this class in the model. 
	 * That is, create the statement (instanceResource, RDF.type, http://xmlns.com/foaf/0.1/Document).
	 * @param model an RDF2Go model
	 * @param instanceResource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #class1] 
	 */
	public static void createInstance(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.createInstance(model, RDFS_CLASS, instanceResource);
	}

	/**
	 * @param model an RDF2Go model
	 * @param instanceResource an RDF2Go resource
	 * @return true if instanceResource is an instance of this class in the model
	 *
	 * [Generated from RDFReactor template rule #class2] 
	 */
	public static boolean hasInstance(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.hasInstance(model, RDFS_CLASS, instanceResource);
	}

	/**
	 * @param model an RDF2Go model
	 * @return all instances of this class in Model 'model' as RDF resources
	 *
	 * [Generated from RDFReactor template rule #class3] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllInstances(Model model) {
		return Base.getAllInstances(model, RDFS_CLASS, org.ontoware.rdf2go.model.node.Resource.class);
	}

	/**
	 * @param model an RDF2Go model
	 * @return all instances of this class in Model 'model' as a ReactorResult,
	 * which can conveniently be converted to iterator, list or array.
	 *
	 * [Generated from RDFReactor template rule #class3-as] 
	 */
	public static ReactorResult<? extends Document> getAllInstances_as(Model model) {
		return Base.getAllInstances_as(model, RDFS_CLASS, Document.class );
	}

    /**
	 * Remove rdf:type Document from this instance. Other triples are not affected.
	 * To delete more, use deleteAllProperties
	 * @param model an RDF2Go model
	 * @param instanceResource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #class4] 
	 */
	public static void deleteInstance(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.deleteInstance(model, RDFS_CLASS, instanceResource);
	}

	/**
	 * Delete all (this, *, *), i.e. including rdf:type
	 * @param model an RDF2Go model
	 * @param resource
	 */
	public static void deleteAllProperties(Model model,	org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.deleteAllProperties(model, instanceResource);
	}

    ///////////////////////////////////////////////////////////////////
    // property access methods

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as RDF resources, that have a relation 'Homepage' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1static] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllFOAFHomepage_Inverse( Model model, Object objectValue) {
		return Base.getAll_Inverse(model, Thing.HOMEPAGE, objectValue);
	}

	/**
	 * @return all A's as RDF resources, that have a relation 'Homepage' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1dynamic] 
	 */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllFOAFHomepage_Inverse() {
		return Base.getAll_Inverse(this.model, Thing.HOMEPAGE, this.getResource() );
	}

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as a ReactorResult, that have a relation 'Homepage' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse-as1static] 
	 */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Resource> getAllFOAFHomepage_Inverse_as( Model model, Object objectValue) {
		return Base.getAll_Inverse_as(model, Thing.HOMEPAGE, objectValue, org.ontoware.rdf2go.model.node.Resource.class);
	}


	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as RDF resources, that have a relation 'Page' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1static] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllFOAFPage_Inverse( Model model, Object objectValue) {
		return Base.getAll_Inverse(model, Thing.PAGE, objectValue);
	}

	/**
	 * @return all A's as RDF resources, that have a relation 'Page' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1dynamic] 
	 */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllFOAFPage_Inverse() {
		return Base.getAll_Inverse(this.model, Thing.PAGE, this.getResource() );
	}

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as a ReactorResult, that have a relation 'Page' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse-as1static] 
	 */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Resource> getAllFOAFPage_Inverse_as( Model model, Object objectValue) {
		return Base.getAll_Inverse_as(model, Thing.PAGE, objectValue, org.ontoware.rdf2go.model.node.Resource.class);
	}


	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as RDF resources, that have a relation 'Primarytopicof' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1static] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllFOAFPrimarytopicof_Inverse( Model model, Object objectValue) {
		return Base.getAll_Inverse(model, Thing.PRIMARYTOPICOF, objectValue);
	}

	/**
	 * @return all A's as RDF resources, that have a relation 'Primarytopicof' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1dynamic] 
	 */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllFOAFPrimarytopicof_Inverse() {
		return Base.getAll_Inverse(this.model, Thing.PRIMARYTOPICOF, this.getResource() );
	}

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as a ReactorResult, that have a relation 'Primarytopicof' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse-as1static] 
	 */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Resource> getAllFOAFPrimarytopicof_Inverse_as( Model model, Object objectValue) {
		return Base.getAll_Inverse_as(model, Thing.PRIMARYTOPICOF, objectValue, org.ontoware.rdf2go.model.node.Resource.class);
	}


	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as RDF resources, that have a relation 'Publications' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1static] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllFOAFPublications_Inverse( Model model, Object objectValue) {
		return Base.getAll_Inverse(model, Person.PUBLICATIONS, objectValue);
	}

	/**
	 * @return all A's as RDF resources, that have a relation 'Publications' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1dynamic] 
	 */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllFOAFPublications_Inverse() {
		return Base.getAll_Inverse(this.model, Person.PUBLICATIONS, this.getResource() );
	}

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as a ReactorResult, that have a relation 'Publications' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse-as1static] 
	 */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Resource> getAllFOAFPublications_Inverse_as( Model model, Object objectValue) {
		return Base.getAll_Inverse_as(model, Person.PUBLICATIONS, objectValue, org.ontoware.rdf2go.model.node.Resource.class);
	}


	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as RDF resources, that have a relation 'SchoolHomepage' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1static] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllFOAFSchoolHomepage_Inverse( Model model, Object objectValue) {
		return Base.getAll_Inverse(model, Person.SCHOOLHOMEPAGE, objectValue);
	}

	/**
	 * @return all A's as RDF resources, that have a relation 'SchoolHomepage' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1dynamic] 
	 */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllFOAFSchoolHomepage_Inverse() {
		return Base.getAll_Inverse(this.model, Person.SCHOOLHOMEPAGE, this.getResource() );
	}

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as a ReactorResult, that have a relation 'SchoolHomepage' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse-as1static] 
	 */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Resource> getAllFOAFSchoolHomepage_Inverse_as( Model model, Object objectValue) {
		return Base.getAll_Inverse_as(model, Person.SCHOOLHOMEPAGE, objectValue, org.ontoware.rdf2go.model.node.Resource.class);
	}


	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as RDF resources, that have a relation 'Workinfohomepage' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1static] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllFOAFWorkinfohomepage_Inverse( Model model, Object objectValue) {
		return Base.getAll_Inverse(model, Person.WORKINFOHOMEPAGE, objectValue);
	}

	/**
	 * @return all A's as RDF resources, that have a relation 'Workinfohomepage' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1dynamic] 
	 */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllFOAFWorkinfohomepage_Inverse() {
		return Base.getAll_Inverse(this.model, Person.WORKINFOHOMEPAGE, this.getResource() );
	}

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as a ReactorResult, that have a relation 'Workinfohomepage' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse-as1static] 
	 */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Resource> getAllFOAFWorkinfohomepage_Inverse_as( Model model, Object objectValue) {
		return Base.getAll_Inverse_as(model, Person.WORKINFOHOMEPAGE, objectValue, org.ontoware.rdf2go.model.node.Resource.class);
	}


	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as RDF resources, that have a relation 'Workplacehomepage' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1static] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllFOAFWorkplacehomepage_Inverse( Model model, Object objectValue) {
		return Base.getAll_Inverse(model, Person.WORKPLACEHOMEPAGE, objectValue);
	}

	/**
	 * @return all A's as RDF resources, that have a relation 'Workplacehomepage' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1dynamic] 
	 */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllFOAFWorkplacehomepage_Inverse() {
		return Base.getAll_Inverse(this.model, Person.WORKPLACEHOMEPAGE, this.getResource() );
	}

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as a ReactorResult, that have a relation 'Workplacehomepage' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse-as1static] 
	 */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Resource> getAllFOAFWorkplacehomepage_Inverse_as( Model model, Object objectValue) {
		return Base.getAll_Inverse_as(model, Person.WORKPLACEHOMEPAGE, objectValue, org.ontoware.rdf2go.model.node.Resource.class);
	}


	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as RDF resources, that have a relation 'Interest' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1static] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllFOAFInterest_Inverse( Model model, Object objectValue) {
		return Base.getAll_Inverse(model, Agent.INTEREST, objectValue);
	}

	/**
	 * @return all A's as RDF resources, that have a relation 'Interest' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1dynamic] 
	 */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllFOAFInterest_Inverse() {
		return Base.getAll_Inverse(this.model, Agent.INTEREST, this.getResource() );
	}

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as a ReactorResult, that have a relation 'Interest' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse-as1static] 
	 */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Resource> getAllFOAFInterest_Inverse_as( Model model, Object objectValue) {
		return Base.getAll_Inverse_as(model, Agent.INTEREST, objectValue, org.ontoware.rdf2go.model.node.Resource.class);
	}


	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as RDF resources, that have a relation 'Openid' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1static] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllFOAFOpenid_Inverse( Model model, Object objectValue) {
		return Base.getAll_Inverse(model, Agent.OPENID, objectValue);
	}

	/**
	 * @return all A's as RDF resources, that have a relation 'Openid' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1dynamic] 
	 */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllFOAFOpenid_Inverse() {
		return Base.getAll_Inverse(this.model, Agent.OPENID, this.getResource() );
	}

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as a ReactorResult, that have a relation 'Openid' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse-as1static] 
	 */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Resource> getAllFOAFOpenid_Inverse_as( Model model, Object objectValue) {
		return Base.getAll_Inverse_as(model, Agent.OPENID, objectValue, org.ontoware.rdf2go.model.node.Resource.class);
	}


	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as RDF resources, that have a relation 'Tipjar' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1static] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllFOAFTipjar_Inverse( Model model, Object objectValue) {
		return Base.getAll_Inverse(model, Agent.TIPJAR, objectValue);
	}

	/**
	 * @return all A's as RDF resources, that have a relation 'Tipjar' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1dynamic] 
	 */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllFOAFTipjar_Inverse() {
		return Base.getAll_Inverse(this.model, Agent.TIPJAR, this.getResource() );
	}

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as a ReactorResult, that have a relation 'Tipjar' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse-as1static] 
	 */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Resource> getAllFOAFTipjar_Inverse_as( Model model, Object objectValue) {
		return Base.getAll_Inverse_as(model, Agent.TIPJAR, objectValue, org.ontoware.rdf2go.model.node.Resource.class);
	}


	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as RDF resources, that have a relation 'Weblog' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1static] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllFOAFWeblog_Inverse( Model model, Object objectValue) {
		return Base.getAll_Inverse(model, Agent.WEBLOG, objectValue);
	}

	/**
	 * @return all A's as RDF resources, that have a relation 'Weblog' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1dynamic] 
	 */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllFOAFWeblog_Inverse() {
		return Base.getAll_Inverse(this.model, Agent.WEBLOG, this.getResource() );
	}

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as a ReactorResult, that have a relation 'Weblog' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse-as1static] 
	 */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Resource> getAllFOAFWeblog_Inverse_as( Model model, Object objectValue) {
		return Base.getAll_Inverse_as(model, Agent.WEBLOG, objectValue, org.ontoware.rdf2go.model.node.Resource.class);
	}


	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as RDF resources, that have a relation 'Accountservicehomepage' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1static] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllFOAFAccountservicehomepage_Inverse( Model model, Object objectValue) {
		return Base.getAll_Inverse(model, OnlineAccount.ACCOUNTSERVICEHOMEPAGE, objectValue);
	}

	/**
	 * @return all A's as RDF resources, that have a relation 'Accountservicehomepage' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse1dynamic] 
	 */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllFOAFAccountservicehomepage_Inverse() {
		return Base.getAll_Inverse(this.model, OnlineAccount.ACCOUNTSERVICEHOMEPAGE, this.getResource() );
	}

	/**
	 * @param model an RDF2Go model
	 * @param objectValue
	 * @return all A's as a ReactorResult, that have a relation 'Accountservicehomepage' to this Document instance
	 *
	 * [Generated from RDFReactor template rule #getallinverse-as1static] 
	 */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Resource> getAllFOAFAccountservicehomepage_Inverse_as( Model model, Object objectValue) {
		return Base.getAll_Inverse_as(model, OnlineAccount.ACCOUNTSERVICEHOMEPAGE, objectValue, org.ontoware.rdf2go.model.node.Resource.class);
	}



    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@43ae24e3 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasFOAFPrimarytopic(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, PRIMARYTOPIC);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@43ae24e3 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasFOAFPrimarytopic() {
		return Base.has(this.model, this.getResource(), PRIMARYTOPIC);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@43ae24e3 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasFOAFPrimarytopic(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, PRIMARYTOPIC, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@43ae24e3 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasFOAFPrimarytopic( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), PRIMARYTOPIC, value);
	}

     /**
     * Get all values of property Primarytopic as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllFOAFPrimarytopic_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, PRIMARYTOPIC);
	}
	
    /**
     * Get all values of property Primarytopic as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllFOAFPrimarytopic_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, PRIMARYTOPIC, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Primarytopic as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllFOAFPrimarytopic_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), PRIMARYTOPIC);
	}

    /**
     * Get all values of property Primarytopic as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllFOAFPrimarytopic_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), PRIMARYTOPIC, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Primarytopic     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
    public static ClosableIterator<org.ontoware.rdfreactor.schema.owl.OwlThing> getAllFOAFPrimarytopic(
            Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
        return Base.getAll( model, instanceResource, PRIMARYTOPIC,
                org.ontoware.rdfreactor.schema.owl.OwlThing.class );
	}
	
    /**
     * Get all values of property Primarytopic as a ReactorResult of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * @param model
     *            an RDF2Go model
     * @param resource
     *            an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to
     *         iterator, list or array
     * 
     *         [Generated from RDFReactor template rule
     *         #get11static-reactorresult]
     */
    public static ReactorResult<org.ontoware.rdfreactor.schema.owl.OwlThing> getAllFOAFPrimarytopic_as(
            Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
        return Base.getAll_as( model, instanceResource, PRIMARYTOPIC,
                org.ontoware.rdfreactor.schema.owl.OwlThing.class );
	}

    /**
     * Get all values of property Primarytopic     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
    public ClosableIterator<org.ontoware.rdfreactor.schema.owl.OwlThing> getAllFOAFPrimarytopic() {
        return Base.getAll( this.model, this.getResource(), PRIMARYTOPIC,
                org.ontoware.rdfreactor.schema.owl.OwlThing.class );
	}

    /**
     * Get all values of property Primarytopic as a ReactorResult of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * @return a ReactorResult of $type which can conveniently be converted to
     *         iterator, list or array
     * 
     *         [Generated from RDFReactor template rule
     *         #get12dynamic-reactorresult]
     */
    public ReactorResult<org.ontoware.rdfreactor.schema.owl.OwlThing> getAllFOAFPrimarytopic_as() {
        return Base.getAll_as( this.model, this.getResource(), PRIMARYTOPIC,
                org.ontoware.rdfreactor.schema.owl.OwlThing.class );
	}
 
    /**
     * Adds a value to property Primarytopic as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addFOAFPrimarytopic( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, PRIMARYTOPIC, value);
	}
	
    /**
     * Adds a value to property Primarytopic as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addFOAFPrimarytopic( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), PRIMARYTOPIC, value);
	}
    
    /**
     * Adds a value to property Primarytopic from an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * @param model
     *            an RDF2Go model
     * @param resource
     *            an RDF2Go resource
     * 
     *            [Generated from RDFReactor template rule #add3static]
     */
    public static void addFOAFPrimarytopic( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.add(model, instanceResource, PRIMARYTOPIC, value);
	}
	
    /**
     * Adds a value to property Primarytopic from an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * [Generated from RDFReactor template rule #add4dynamic]
     */
    public void addFOAFPrimarytopic(
            org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.add(this.model, this.getResource(), PRIMARYTOPIC, value);
	}
  

    /**
     * Sets a value of property Primarytopic from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setFOAFPrimarytopic( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, PRIMARYTOPIC, value);
	}
	
    /**
     * Sets a value of property Primarytopic from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setFOAFPrimarytopic( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), PRIMARYTOPIC, value);
	}
    
    /**
     * Sets a value of property Primarytopic from an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing First, all existing values
     * are removed, then this value is added. Cardinality constraints are not
     * checked, but this method exists only for properties with no
     * minCardinality or minCardinality == 1.
     * 
     * @param model
     *            an RDF2Go model
     * @param resource
     *            an RDF2Go resource
     * @param value
     *            the value to be added
     * 
     *            [Generated from RDFReactor template rule #set3static]
     */
    public static void setFOAFPrimarytopic( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.set(model, instanceResource, PRIMARYTOPIC, value);
	}
	
    /**
     * Sets a value of property Primarytopic from an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing First, all existing values
     * are removed, then this value is added. Cardinality constraints are not
     * checked, but this method exists only for properties with no
     * minCardinality or minCardinality == 1.
     * 
     * @param value
     *            the value to be added
     * 
     *            [Generated from RDFReactor template rule #set4dynamic]
     */
    public void setFOAFPrimarytopic(
            org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.set(this.model, this.getResource(), PRIMARYTOPIC, value);
	}
  


    /**
     * Removes a value of property Primarytopic as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeFOAFPrimarytopic( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, PRIMARYTOPIC, value);
	}
	
    /**
     * Removes a value of property Primarytopic as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeFOAFPrimarytopic( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), PRIMARYTOPIC, value);
	}
    
    /**
     * Removes a value of property Primarytopic given as an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * @param model
     *            an RDF2Go model
     * @param resource
     *            an RDF2Go resource
     * @param value
     *            the value to be removed
     * 
     *            [Generated from RDFReactor template rule #remove3static]
     */
    public static void removeFOAFPrimarytopic( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.remove(model, instanceResource, PRIMARYTOPIC, value);
	}
	
    /**
     * Removes a value of property Primarytopic given as an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * @param value
     *            the value to be removed
     * 
     *            [Generated from RDFReactor template rule #remove4dynamic]
     */
    public void removeFOAFPrimarytopic(
            org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.remove(this.model, this.getResource(), PRIMARYTOPIC, value);
	}
  
    /**
     * Removes all values of property Primarytopic     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllFOAFPrimarytopic( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, PRIMARYTOPIC);
	}
	
    /**
     * Removes all values of property Primarytopic	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllFOAFPrimarytopic() {
		Base.removeAll(this.model, this.getResource(), PRIMARYTOPIC);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@63edf119 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasFOAFSha1sum_hex_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, SHA1SUM_HEX_);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@63edf119 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasFOAFSha1sum_hex_() {
		return Base.has(this.model, this.getResource(), SHA1SUM_HEX_);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@63edf119 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasFOAFSha1sum_hex_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, SHA1SUM_HEX_, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@63edf119 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasFOAFSha1sum_hex_( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), SHA1SUM_HEX_, value);
	}

     /**
     * Get all values of property Sha1sum_hex_ as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllFOAFSha1sum_hex__asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, SHA1SUM_HEX_);
	}
	
    /**
     * Get all values of property Sha1sum_hex_ as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllFOAFSha1sum_hex__asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, SHA1SUM_HEX_, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Sha1sum_hex_ as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllFOAFSha1sum_hex__asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), SHA1SUM_HEX_);
	}

    /**
     * Get all values of property Sha1sum_hex_ as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllFOAFSha1sum_hex__asNode_() {
		return Base.getAll_as(this.model, this.getResource(), SHA1SUM_HEX_, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Sha1sum_hex_     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<Thing> getAllFOAFSha1sum_hex_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, SHA1SUM_HEX_, Thing.class);
	}
	
    /**
     * Get all values of property Sha1sum_hex_ as a ReactorResult of Thing 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<Thing> getAllFOAFSha1sum_hex__as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, SHA1SUM_HEX_, Thing.class);
	}

    /**
     * Get all values of property Sha1sum_hex_     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<Thing> getAllFOAFSha1sum_hex_() {
		return Base.getAll(this.model, this.getResource(), SHA1SUM_HEX_, Thing.class);
	}

    /**
     * Get all values of property Sha1sum_hex_ as a ReactorResult of Thing 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<Thing> getAllFOAFSha1sum_hex__as() {
		return Base.getAll_as(this.model, this.getResource(), SHA1SUM_HEX_, Thing.class);
	}
 
    /**
     * Adds a value to property Sha1sum_hex_ as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addFOAFSha1sum_hex_( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, SHA1SUM_HEX_, value);
	}
	
    /**
     * Adds a value to property Sha1sum_hex_ as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addFOAFSha1sum_hex_( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), SHA1SUM_HEX_, value);
	}
    /**
     * Adds a value to property Sha1sum_hex_ from an instance of Thing 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addFOAFSha1sum_hex_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Thing value) {
		Base.add(model, instanceResource, SHA1SUM_HEX_, value);
	}
	
    /**
     * Adds a value to property Sha1sum_hex_ from an instance of Thing 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addFOAFSha1sum_hex_(Thing value) {
		Base.add(this.model, this.getResource(), SHA1SUM_HEX_, value);
	}
  

    /**
     * Sets a value of property Sha1sum_hex_ from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setFOAFSha1sum_hex_( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, SHA1SUM_HEX_, value);
	}
	
    /**
     * Sets a value of property Sha1sum_hex_ from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setFOAFSha1sum_hex_( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), SHA1SUM_HEX_, value);
	}
    /**
     * Sets a value of property Sha1sum_hex_ from an instance of Thing 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setFOAFSha1sum_hex_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Thing value) {
		Base.set(model, instanceResource, SHA1SUM_HEX_, value);
	}
	
    /**
     * Sets a value of property Sha1sum_hex_ from an instance of Thing 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setFOAFSha1sum_hex_(Thing value) {
		Base.set(this.model, this.getResource(), SHA1SUM_HEX_, value);
	}
  


    /**
     * Removes a value of property Sha1sum_hex_ as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeFOAFSha1sum_hex_( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, SHA1SUM_HEX_, value);
	}
	
    /**
     * Removes a value of property Sha1sum_hex_ as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeFOAFSha1sum_hex_( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), SHA1SUM_HEX_, value);
	}
    /**
     * Removes a value of property Sha1sum_hex_ given as an instance of Thing 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeFOAFSha1sum_hex_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, Thing value) {
		Base.remove(model, instanceResource, SHA1SUM_HEX_, value);
	}
	
    /**
     * Removes a value of property Sha1sum_hex_ given as an instance of Thing 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeFOAFSha1sum_hex_(Thing value) {
		Base.remove(this.model, this.getResource(), SHA1SUM_HEX_, value);
	}
  
    /**
     * Removes all values of property Sha1sum_hex_     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllFOAFSha1sum_hex_( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, SHA1SUM_HEX_);
	}
	
    /**
     * Removes all values of property Sha1sum_hex_	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllFOAFSha1sum_hex_() {
		Base.removeAll(this.model, this.getResource(), SHA1SUM_HEX_);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@60bfd2f5 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasFOAFTopic(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, TOPIC);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@60bfd2f5 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasFOAFTopic() {
		return Base.has(this.model, this.getResource(), TOPIC);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@60bfd2f5 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasFOAFTopic(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, TOPIC, value);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@60bfd2f5 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasFOAFTopic( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), TOPIC, value);
	}

     /**
     * Get all values of property Topic as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllFOAFTopic_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, TOPIC);
	}
	
    /**
     * Get all values of property Topic as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllFOAFTopic_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, TOPIC, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property Topic as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllFOAFTopic_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), TOPIC);
	}

    /**
     * Get all values of property Topic as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllFOAFTopic_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), TOPIC, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property Topic     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
    public static ClosableIterator<org.ontoware.rdfreactor.schema.owl.OwlThing> getAllFOAFTopic(
            Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
        return Base.getAll( model, instanceResource, TOPIC,
                org.ontoware.rdfreactor.schema.owl.OwlThing.class );
	}
	
    /**
     * Get all values of property Topic as a ReactorResult of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * @param model
     *            an RDF2Go model
     * @param resource
     *            an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to
     *         iterator, list or array
     * 
     *         [Generated from RDFReactor template rule
     *         #get11static-reactorresult]
     */
    public static ReactorResult<org.ontoware.rdfreactor.schema.owl.OwlThing> getAllFOAFTopic_as(
            Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource ) {
        return Base.getAll_as( model, instanceResource, TOPIC,
                org.ontoware.rdfreactor.schema.owl.OwlThing.class );
	}

    /**
     * Get all values of property Topic     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
    public ClosableIterator<org.ontoware.rdfreactor.schema.owl.OwlThing> getAllFOAFTopic() {
        return Base.getAll( this.model, this.getResource(), TOPIC,
                org.ontoware.rdfreactor.schema.owl.OwlThing.class );
	}

    /**
     * Get all values of property Topic as a ReactorResult of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * @return a ReactorResult of $type which can conveniently be converted to
     *         iterator, list or array
     * 
     *         [Generated from RDFReactor template rule
     *         #get12dynamic-reactorresult]
     */
    public ReactorResult<org.ontoware.rdfreactor.schema.owl.OwlThing> getAllFOAFTopic_as() {
        return Base.getAll_as( this.model, this.getResource(), TOPIC,
                org.ontoware.rdfreactor.schema.owl.OwlThing.class );
	}
 
    /**
     * Adds a value to property Topic as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addFOAFTopic( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, TOPIC, value);
	}
	
    /**
     * Adds a value to property Topic as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addFOAFTopic( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), TOPIC, value);
	}
    
    /**
     * Adds a value to property Topic from an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * @param model
     *            an RDF2Go model
     * @param resource
     *            an RDF2Go resource
     * 
     *            [Generated from RDFReactor template rule #add3static]
     */
    public static void addFOAFTopic( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.add(model, instanceResource, TOPIC, value);
	}
	
    /**
     * Adds a value to property Topic from an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * [Generated from RDFReactor template rule #add4dynamic]
     */
    public void addFOAFTopic( org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.add(this.model, this.getResource(), TOPIC, value);
	}
  

    /**
     * Sets a value of property Topic from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setFOAFTopic( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, TOPIC, value);
	}
	
    /**
     * Sets a value of property Topic from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setFOAFTopic( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), TOPIC, value);
	}
    
    /**
     * Sets a value of property Topic from an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing First, all existing values
     * are removed, then this value is added. Cardinality constraints are not
     * checked, but this method exists only for properties with no
     * minCardinality or minCardinality == 1.
     * 
     * @param model
     *            an RDF2Go model
     * @param resource
     *            an RDF2Go resource
     * @param value
     *            the value to be added
     * 
     *            [Generated from RDFReactor template rule #set3static]
     */
    public static void setFOAFTopic( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.set(model, instanceResource, TOPIC, value);
	}
	
    /**
     * Sets a value of property Topic from an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing First, all existing values
     * are removed, then this value is added. Cardinality constraints are not
     * checked, but this method exists only for properties with no
     * minCardinality or minCardinality == 1.
     * 
     * @param value
     *            the value to be added
     * 
     *            [Generated from RDFReactor template rule #set4dynamic]
     */
    public void setFOAFTopic( org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.set(this.model, this.getResource(), TOPIC, value);
	}
  


    /**
     * Removes a value of property Topic as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeFOAFTopic( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, TOPIC, value);
	}
	
    /**
     * Removes a value of property Topic as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeFOAFTopic( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), TOPIC, value);
	}
    
    /**
     * Removes a value of property Topic given as an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * @param model
     *            an RDF2Go model
     * @param resource
     *            an RDF2Go resource
     * @param value
     *            the value to be removed
     * 
     *            [Generated from RDFReactor template rule #remove3static]
     */
    public static void removeFOAFTopic( Model model,
            org.ontoware.rdf2go.model.node.Resource instanceResource,
            org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.remove(model, instanceResource, TOPIC, value);
	}
	
    /**
     * Removes a value of property Topic given as an instance of
     * org.ontoware.rdfreactor.schema.owl.OwlThing
     * 
     * @param value
     *            the value to be removed
     * 
     *            [Generated from RDFReactor template rule #remove4dynamic]
     */
    public void removeFOAFTopic(
            org.ontoware.rdfreactor.schema.owl.OwlThing value ) {
		Base.remove(this.model, this.getResource(), TOPIC, value);
	}
  
    /**
     * Removes all values of property Topic     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllFOAFTopic( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, TOPIC);
	}
	
    /**
     * Removes all values of property Topic	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllFOAFTopic() {
		Base.removeAll(this.model, this.getResource(), TOPIC);
	}
 }